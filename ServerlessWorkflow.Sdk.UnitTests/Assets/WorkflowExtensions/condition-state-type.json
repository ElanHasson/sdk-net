{
  "$defs": {
    "workflow": {
      "properties": {
        "states": {
          "items": {
            "anyOf": [
              {
                "title": "Sleep State",
                "$ref": "#/definitions/sleepstate"
              },
              {
                "title": "Event State",
                "$ref": "#/definitions/eventstate"
              },
              {
                "title": "Operation State",
                "$ref": "#/definitions/operationstate"
              },
              {
                "title": "Parallel State",
                "$ref": "#/definitions/parallelstate"
              },
              {
                "title": "Switch State",
                "$ref": "#/definitions/switchstate"
              },
              {
                "title": "Inject State",
                "$ref": "#/definitions/injectstate"
              },
              {
                "title": "ForEach State",
                "$ref": "#/definitions/foreachstate"
              },
              {
                "title": "Callback State",
                "$ref": "#/definitions/callbackstate"
              },
              {
                "title": "Condition State",
                "$ref": "#/definitions/conditionState"
              }
            ]
          }
        }
      },
      "definitions": {
        "conditionState": {
          "type": "object",
          "description": "Enables the use of a ternary",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique State id",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "description": "State name"
            },
            "type": {
              "type": "string",
              "const": "condition",
              "description": "State type"
            },
            "end": {
              "$ref": "#/definitions/end",
              "description": "State end definition"
            },
            "stateDataFilter": {
              "description": "State data filter",
              "$ref": "#/definitions/statedatafilter"
            },
            "if": {
              "type": "object",
              "properties": {
                "condition": {
                  "type": "string"
                },
                "action": {
                  "$ref": "#/definitions/action"
                }
              },
              "required": [ "condition", "action" ]
            },
            "else": {
              "type": "object",
              "properties": {
                "action": {
                  "$ref": "#/definitions/action"
                }
              },
              "required": [ "action" ]
            },
            "timeouts": {
              "type": "object",
              "description": "State specific timeouts",
              "properties": {
                "stateExecTimeout": {
                  "$ref": "timeouts.json#/definitions/stateExecTimeout"
                }
              },
              "required": []
            },
            "onErrors": {
              "type": "array",
              "description": "States error handling definitions",
              "items": {
                "type": "object",
                "$ref": "#/definitions/error"
              },
              "additionalItems": false
            },
            "transition": {
              "description": "Next transition of the workflow after the workflow sleep",
              "$ref": "#/definitions/transition"
            },
            "compensatedBy": {
              "type": "string",
              "minLength": 1,
              "description": "Unique Name of a workflow state which is responsible for compensation of this state"
            },
            "usedForCompensation": {
              "type": "boolean",
              "default": false,
              "description": "If true, this state is used to compensate another state. Default is false"
            },
            "metadata": {
              "$ref": "common.json#/definitions/metadata"
            }
          },
          "additionalProperties": false,
          "if": {
            "properties": {
              "usedForCompensation": {
                "const": true
              }
            },
            "required": [
              "usedForCompensation"
            ]
          },
          "then": {
            "required": [
              "name",
              "type",
              "if"
            ]
          },
          "else": {
            "oneOf": [
              {
                "required": [
                  "name",
                  "type",
                  "if",
                  "end"
                ]
              },
              {
                "required": [
                  "name",
                  "type",
                  "if",
                  "transition"
                ]
              }
            ]
          }
        }
      }
    }
  }
}