<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServerlessWorkflow.Sdk</name>
    </assembly>
    <members>
        <member name="T:ServerlessWorkflow.Sdk.Models.ActionExecutionMode">
            <summary>
            Enumerates all types of actions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.Models.ActionExecutionMode.Sequential">
            <summary>
            Indicates a sequential execution of actions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.Models.ActionExecutionMode.Parallel">
            <summary>
            Indicates a parallel execution of actions
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition">
            <summary>
            Represents the object used to configure how actions filter the state data for both input and output
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition.FromStateData">
            <summary>
            Gets/sets an expression that filters state data that can be used by the action
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition.Results">
            <summary>
            Gets/sets an expression that filters the actions data results
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition.ToStateData">
            <summary>
            Gets/sets an expression that selects a state data element to which the action results should be added/merged into. If not specified denotes the top-level state data element
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDataFilterDefinition.UseResults">
            <summary>
            Gets/sets a boolean indicating whether or not to merge the action's data into state data.<para></para> If set to false, action data results are not added/merged to state data. In this case 'results' and 'toStateData' should be ignored. Defaults to true.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ActionDefinition">
            <summary>
            Represents the object used to define a workflow action
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Name">
            <summary>
            Gets/sets the unique action definition name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Type">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.FunctionValue">
            <summary>
            Gets/sets a <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the function to invoke
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Function">
            <summary>
            Gets the object used to configure the reference of the function to invoke
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Event">
            <summary>
            Gets the object used to configure the reference of the event to produce or consume
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.SubflowValue">
            <summary>
            Gets/sets a <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that references a subflow to run
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Subflow">
            <summary>
            Gets the object used to configure the reference of the subflow to run
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.RetryRef">
            <summary>
            Gets/sets the name of the workflow retry definition to use. If not defined uses the default runtime retry definition
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.NonRetryableErrors">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing references to defined <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s for which the action should not be retried. Used only when `<see cref="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.AutoRetries"/>` is set to `true`
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.RetryableErrors">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing references to defined <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s for which the action should be retried. Used only when `<see cref="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.AutoRetries"/>` is set to `false`
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.ActionDataFilter">
            <summary>
            Gets/sets an object used to define the way to filter the action's data
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Sleep">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s execution delay configuration
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.Condition">
            <summary>
            Gets/sets an expression to be evaluated positively as a condition for the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionDefinition.ExtensionProperties">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s extension properties
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ActionDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ActionExecutionDelayDefinition">
            <summary>
            Represents an object used to configure an <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s execution delay
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionExecutionDelayDefinition.Before">
            <summary>
            Gets/sets the amount of time to wait before executing the configured <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ActionExecutionDelayDefinition.After">
            <summary>
            Gets/sets the amount of time to wait after having executed the configured <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition">
            <summary>
            Represents a reusable definition of a workflow authentication mechanism
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>'s name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition.Scheme">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>'s scheme
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition.PropertiesValue">
            <summary>
            Gets/sets a <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationProperties"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition.Properties">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>'s properties
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition.SecretRef">
            <summary>
            Gets/sets the reference to the secret that defines the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>'s properties
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.AuthenticationProperties">
            <summary>
            Represents an object used to configure an authentication mechanism
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.AuthenticationProperties.Metadata">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationProperties"/>'s metadata
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.BasicAuthenticationProperties">
            <summary>
            Represents an object used to configure a 'Basic' authentication scheme
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BasicAuthenticationProperties.Username">
            <summary>
            Gets/sets the username to use when authenticating
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BasicAuthenticationProperties.Password">
            <summary>
            Gets/sets the password to use when authenticating
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.BearerAuthenticationProperties">
            <summary>
            Represents an object used to configure a 'Bearer' authentication scheme
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BearerAuthenticationProperties.Token">
            <summary>
            Gets/sets the token used to authenticate
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.BranchDefinition">
            <summary>
            Represents a workflow execution branch
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BranchDefinition.Name">
            <summary>
            gets/sets the branch's name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BranchDefinition.ActionMode">
            <summary>
            Gets/sets a value that specifies how actions are to be performed (in sequence of parallel)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.BranchDefinition.Actions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the actions to be executed in this branch
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.BranchDefinition.GetAction(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.BranchDefinition.TryGetAction(System.String,ServerlessWorkflow.Sdk.Models.ActionDefinition@)">
            <summary>
            Attempts to get the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get</param>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.BranchDefinition.TryGetNextAction(System.String,ServerlessWorkflow.Sdk.Models.ActionDefinition@)">
            <summary>
            Attempts to get the next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> in the pipeline
            </summary>
            <param name="previousActionName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get the next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> for</param>
            <param name="action">The next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>, if any</param>
            <returns>A boolean indicating whether or not there is a next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> in the pipeline</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.BranchDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition">
            <summary>
            Represents a workflow state that performs an action, then waits for the callback event that denotes completion of the action
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.Action">
            <summary>
            Gets/sets the action to be executed
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.Event">
            <summary>
            Gets/sets a reference to the callback event to await
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.Timeout">
            <summary>
            Gets/sets the time period to wait for incoming events
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition.EventDataFilter">
            <summary>
            Gets/sets the callback event data filter definition
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.CronDefinition">
            <summary>
            Represents a CRON expression definition
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CronDefinition.Expression">
            <summary>
            Gets/sets the repeating interval (cron expression) describing when the workflow instance should be created
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.CronDefinition.ValidUntil">
            <summary>
            Gets/sets the date and time when the cron expression invocation is no longer valid
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition">
            <summary>
            Represents a data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DataCaseDefinition.Condition">
            <summary>
            Gets/sets an expression evaluated against state data. True if results are not empty
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition">
            <summary>
            Represents the object used to configure a <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s data input schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition.SchemaValue">
            <summary>
            Gets/sets the url of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s input data schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition.Schema">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s data input schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition.SchemaUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s input data schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition.FailOnValidationErrors">
            <summary>
            Gets/sets a boolean indicating whether or not to terminate the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution whenever the validation of the input data fails. Defaults to true.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.DefaultCaseDefinition">
            <summary>
            Represents an object used to define the transition of the workflow if there is no matching cases or event timeout is reached
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EndDefinition">
            <summary>
            Represents an object used to explicitly define execution completion of a workflow instance or workflow execution path.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EndDefinition.Terminate">
            <summary>
            Gets/sets a boolean indicating whether or not to terminate the executing workflow. If true, completes all execution flows in the given workflow instance. Defaults to false.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EndDefinition.ProduceEvents">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the events that should be produced
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EndDefinition.Compensate">
            <summary>
            Gets/sets a boolean indicating whether or not the state should trigger compensation. Default is false.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition">
            <summary>
            Represents the definition of a workflow error handler
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.Error">
            <summary>
            Gets/sets a domain-specific error name, or '*' to indicate all possible errors. If other handlers are declared, the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> will only be considered on errors that have NOT been handled by any other.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.Code">
            <summary>
            Gets/sets the error code. Can be used in addition to the name to help runtimes resolve to technical errors/exceptions. Should not be defined if error is set to '*'.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.Retry">
            <summary>
            Gets/sets a reference to the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to use 
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.TransitionValue">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.Transition">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s transition to another <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.TransitionToStateName">
            <summary>
            Gets/sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.EndValue">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.End">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s transition to another <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.IsEnd">
            <summary>
            Gets/sets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> is the end of a logicial workflow path
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition">
            <summary>
            Represents the definition of an event-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventCaseDefinition.Event">
            <summary>
            Gets/sets the unique event name the condition applies to
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventCorrelationDefinition">
            <summary>
            Represents an object used to define the way to correlate a cloud event
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventCorrelationDefinition.ContextAttributeName">
            <summary>
            Gets/sets the cloud event Extension Context Attribute name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventCorrelationDefinition.ContextAttributeValue">
            <summary>
            Gets/sets the cloud event Extension Context Attribute value
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventDataFilterDefinition">
            <summary>
            Represents an object used to configure how event data is to be filtered and added to or merged with the state data
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDataFilterDefinition.Data">
            <summary>
            Gets/sets an expression that filters the event data (payload)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDataFilterDefinition.ToStateData">
            <summary>
            Gets/sets an expression that selects a state data element to which the action results should be added/merged into. If not specified denotes the top-level state data element
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDataFilterDefinition.UseData">
            <summary>
            Gets/sets a boolean indicating whether or not to merge the event's data into state data.<para></para> If set to false, action data results are not added/merged to state data. In this case 'data' and 'toStateData' should be ignored. Defaults to true.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventDefinition">
            <summary>
            Represents an object used to define events and their correlations
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Name">
            <summary>
            Gets/sets the Unique event name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Source">
            <summary>
            Gets/sets the cloud event source
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Type">
            <summary>
            Gets/sets the cloud event type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Kind">
            <summary>
            Gets/sets a value that defines the CloudEvent as either '<see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/>' or '<see cref="F:ServerlessWorkflow.Sdk.EventKind.Produced"/>' by the workflow. Default is '<see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/>'.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Correlations">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCorrelationDefinition"/>s used to define the way the cloud event is correlated
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.DataOnly">
            <summary>
            Gets/sets a boolean indicating whether or not to use the event's data only (thus making data the top level element, instead of including all context attributes at top level). Defaults to true.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Metadata">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>'s metadata
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventDefinition.ExtensionProperties">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>'s extension properties
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventReference">
            <summary>
            Represents a reference to an <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.ProduceEvent">
            <summary>
            Gets the name of the event to produce
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.ResultEvent">
            <summary>
            Gets the name of the event to consume
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.DataValue">
            <summary>
            Gets/sets the data to become the cloud event's payload. 
            If string type, an expression which selects parts of the states data output to become the data (payload) of the event referenced by '<see cref="P:ServerlessWorkflow.Sdk.Models.EventReference.ProduceEvent"/>'. 
            If object type, a custom object to become the data (payload) of the event referenced by '<see cref="P:ServerlessWorkflow.Sdk.Models.EventReference.ProduceEvent"/>'.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.Data">
            <summary>
            Gets/sets a custom object to become the data (payload) of the event referenced by '<see cref="P:ServerlessWorkflow.Sdk.Models.EventReference.ProduceEvent"/>'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.DataExpression">
            <summary>
            Gets/sets an expression which selects parts of the states data output to become the data (payload) of the event referenced by '<see cref="P:ServerlessWorkflow.Sdk.Models.EventReference.ProduceEvent"/>'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.ContextAttributes">
            <summary>
            Gets/sets additional extension context attributes to the produced event
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.ConsumeEventTimeout">
            <summary>
            Gets the maximum amount of time to wait for the result event. If not defined it be set to the actionExecutionTimeout
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.InvocationMode">
            <summary>
            Gets/sets the reference event's <see cref="T:ServerlessWorkflow.Sdk.InvocationMode"/>. Default is <see cref="F:ServerlessWorkflow.Sdk.InvocationMode.Synchronous"/>.
            </summary>
            <remarks>
            Default value of this property is sync, meaning that workflow execution should wait until the function completes (the result event is received).<para></para>
            If set to async, workflow execution should just produce the trigger event and should not wait for the result event
            </remarks>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventReference.ExtensionProperties">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>'s extension properties
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition">
            <summary>
            Represents a workflow state that awaits one or more events and perform actions when they are received
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateDefinition.Exclusive">
            <summary>
            Gets/sets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> awaits one or all of defined events.
            If 'true', consuming one of the defined events causes its associated actions to be performed. If 'false', all of the defined events must be consumed in order for actions to be performed. Defaults to 'true'.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateDefinition.Triggers">
            <summary>
            Gets/sets an object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>'s triggers and actions
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateDefinition.Timeout">
            <summary>
            Gets/sets the duration to wait for incoming events
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventStateDefinition.GetTrigger(System.Int32)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> with the specified id
            </summary>
            <param name="id">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> with the specified id</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventStateDefinition.TryGetTrigger(System.Int32,ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition@)">
            <summary>
            Attempts to get the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> with the specified id
            </summary>
            <param name="id">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to get</param>
            <param name="trigger">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> with the specified id</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> with the specified id could be found</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition">
            <summary>
            Represents the definition of an <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>'s trigger
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.Events">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the references one or more unique event names in the defined workflow events
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.ActionMode">
            <summary>
            Gets/sets a value that specifies how actions are to be performed (in sequence of parallel)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.Actions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the actions to be performed if expression matches
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.DataFilter">
            <summary>
            Gets/sets an object used to filter the event data 
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.GetAction(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.TryGetAction(System.String,ServerlessWorkflow.Sdk.Models.ActionDefinition@)">
            <summary>
            Attempts to get the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get</param>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition.TryGetNextAction(System.String,ServerlessWorkflow.Sdk.Models.ActionDefinition@)">
            <summary>
            Attempts to get the next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> in the pipeline
            </summary>
            <param name="previousActionName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get the next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> for</param>
            <param name="action">The next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>, if any</param>
            <returns>A boolean indicating whether or not there is a next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> in the pipeline</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ExtensionDefinition">
            <summary>
            Represents the definition of a Serverless Workflow extension
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExtensionDefinition.ExtensionId">
            <summary>
            Gets/sets the extension's unique id
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExtensionDefinition.Resource">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> to a resource containing the workflow extension definition (json or yaml)
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ExtensionStateDefinition">
            <summary>
            Represents the definition of an extension state
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExtensionStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExtensionStateDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExtensionStateDefinition.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExtensionStateDefinition"/>
            </summary>
            <param name="type">The type of the extension state</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition">
            <summary>
            Represents an external definition reference
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition.#ctor(System.Uri)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition"/>
            </summary>
            <param name="definitionUri">The <see cref="T:System.Uri"/> used to reference the file that defines the element described by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition.DefinitionUri">
            <summary>
            Gets the <see cref="T:System.Uri"/> used to reference the file that defines the element described by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition.Loaded">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalArrayDefinition"/> has been loaded
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ExternalDefinition">
            <summary>
            Represents an external definition reference
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalDefinition.#ctor(System.Uri)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinition"/>
            </summary>
            <param name="definitionUri">The <see cref="T:System.Uri"/> used to reference the file that defines the element described by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinition"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExternalDefinition.DefinitionUri">
            <summary>
            Gets the <see cref="T:System.Uri"/> used to reference the file that defines the element described by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExternalDefinition.Loaded">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinition"/> has been loaded
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1">
            <summary>
            Represents a <see cref="T:System.Collections.Generic.List`1"/> that can be loaded from an external definition file
            </summary>
            <typeparam name="T">The type of elements contained by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1"/></typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1"/>
            </summary>
            <param name="collection">The collection whose elements are copied into the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1"/></param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1.#ctor(System.Uri)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1"/>
            </summary>
            <param name="definitionUri">The <see cref="T:System.Uri"/> used to reference the file that defines the elements contained by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1.DefinitionUri">
            <summary>
            Gets the <see cref="T:System.Uri"/> used to reference the file that defines the elements contained by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1.Loaded">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalDefinitionCollection`1"/> has been loaded
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ExternalJSchema">
            <summary>
            Represents an external definition reference
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalJSchema.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalJSchema"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ExternalJSchema.#ctor(System.Uri)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalJSchema"/>
            </summary>
            <param name="definitionUri">The <see cref="T:System.Uri"/> used to reference the file that defines the element described by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalJSchema"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExternalJSchema.DefinitionUri">
            <summary>
            Gets the <see cref="T:System.Uri"/> used to reference the file that defines the element described by the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalJSchema"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ExternalJSchema.Loaded">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.ExternalJSchema"/> has been loaded
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition">
            <summary>
            Represents a workflow state that executes a set of defined actions or workflows for each element of a data array
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.InputCollection">
            <summary>
            gets/sets an expression selecting an array element of the states data
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.OutputCollection">
            <summary>
            Gets/sets an expression specifying an array element of the states data to add the results of each iteration
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.IterationParameter">
            <summary>
            Gets/sets the name of the iteration parameter that can be referenced in actions/workflow. For each parallel iteration, this param should contain an unique element of the array referenced by the  <see cref="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.InputCollection"/> expression
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.BatchSize">
            <summary>
            Gets/sets a uint that specifies how upper bound on how many iterations may run in parallel
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.Mode">
            <summary>
            Gets/sets a value used to configure the way the actions of each iterations should be executed
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.Actions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> of actions to be executed for each of the elements of the <see cref="P:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.InputCollection"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.GetAction(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.TryGetAction(System.String,ServerlessWorkflow.Sdk.Models.ActionDefinition@)">
            <summary>
            Attempts to get the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get</param>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition.TryGetNextAction(System.String,ServerlessWorkflow.Sdk.Models.ActionDefinition@)">
            <summary>
            Attempts to get the next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> in the pipeline
            </summary>
            <param name="previousActionName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get the next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> for</param>
            <param name="action">The next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>, if any</param>
            <returns>A boolean indicating whether or not there is a next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> in the pipeline</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition">
            <summary>
            Represents an object used to define a reusable function
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Name">
            <summary>
            Gets/sets a unique function name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Operation">
            <summary>
            Gets/sets the operation. If type '<see cref="F:ServerlessWorkflow.Sdk.FunctionType.Rest"/>', combination of the function/service OpenAPI definition URI and the operationID of the operation that needs to be invoked, separated by a '#'. 
            If type is `<see cref="F:ServerlessWorkflow.Sdk.FunctionType.Expression"/>` defines the workflow expression.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Type">
            <summary>
            Gets/sets the type of the defined function. Defaults to '<see cref="F:ServerlessWorkflow.Sdk.FunctionType.Rest"/>'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.AuthRef">
            <summary>
            Gets/sets the reference to the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use when invoking the function. Ignored when <see cref="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Type"/> has been set to <see cref="F:ServerlessWorkflow.Sdk.FunctionType.Expression"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Metadata">
            <summary>
            Gets/sets the function's metadata
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.ExtensionProperties">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s extension properties
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.FunctionDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.FunctionReference">
            <summary>
            Represents a reference to a <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionReference.RefName">
            <summary>
            Gets/sets the referenced function's name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionReference.Arguments">
            <summary>
            Gets/sets a <see cref="!:Any"/> that contains the parameters of the function to invoke
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionReference.SelectionSet">
            <summary>
            Gets/sets a <see href="https://spec.graphql.org/June2018/#sec-Selection-Sets">GraphQL selection set</see>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.FunctionReference.ExtensionProperties">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>'s extension properties
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.FunctionReference.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition">
            <summary>
            Represents a workflow state that injects static data into state data input
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.InjectStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.InjectStateDefinition.Data">
            <summary>
            Gets/sets the object to inject within the state's data input and can be manipulated via filter
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate">
            <summary>
            Represents a ProtoBuf surrogate used to serialize and deserialize <see cref="T:Newtonsoft.Json.Schema.JSchema"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate"/>
            </summary>
            <param name="properties"></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate.Properties">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:Neuroglia.Serialization.DynamicObject"/>'s properties
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate.op_Implicit(ServerlessWorkflow.Sdk.Models.JSchemaSurrogate)~Newtonsoft.Json.Schema.JSchema">
            <summary>
            Implicitly converts the specified <see cref="T:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate"/> into a new <see cref="T:Newtonsoft.Json.Schema.JSchema"/>
            </summary>
            <param name="surrogate">The <see cref="T:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate"/> to convert</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate.op_Implicit(Newtonsoft.Json.Schema.JSchema)~ServerlessWorkflow.Sdk.Models.JSchemaSurrogate">
            <summary>
            Implicitly converts the specified <see cref="T:Newtonsoft.Json.Schema.JSchema"/> into a new <see cref="T:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate"/>
            </summary>
            <param name="schema">The <see cref="T:Newtonsoft.Json.Schema.JSchema"/> to convert</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.JSchemaSurrogate.FromObject(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties">
            <summary>
            Represents an object used to configure an 'OAuth2' authentication scheme
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.GrantType">
            <summary>
            Gets/sets the OAuth2 grant type to use
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.Authority">
            <summary>
            Gets/sets the uri of the OAuth2 authority to use to generate an access token
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.ClientId">
            <summary>
            Gets/sets the id of the OAuth2 client to use
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.ClientSecret">
            <summary>
            Gets/sets the secret of the non-public OAuth2 client to use. Required when <see cref="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.GrantType"/> has been set to <see cref="F:ServerlessWorkflow.Sdk.OAuth2GrantType.TokenExchange"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.Username">
            <summary>
            Gets/sets the username to use when authenticating
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.Password">
            <summary>
            Gets/sets the password to use when authenticating
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.Scope">
            <summary>
            Gets/sets a space-separated list containing the authorized scopes to request
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.Audience">
            <summary>
            Gets/sets a space-separated list containing the authorized audiences of the resulting token
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.SubjectToken">
            <summary>
            Gets/sets the token that represents the identity of the party on behalf of whom the request is being made.Typically, the subject of this token will be the subject of the security token issued in response to the request.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.SubjectTokenType">
            <summary>
            Gets/sets an identifie that indicates the type of the security token in the "subject_token" parameter.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.ActorToken">
            <summary>
            Gets/sets a token that represents the identity of the acting party.Typically, this will be the party that is authorized to use the requested security token and act on behalf of the subject.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties.ActorTokenType">
            <summary>
            Gets/sets an identifier, as described in Section 3, that indicates the type of the security token in the "actor_token" parameter. This is REQUIRED when the "actor_token" parameter is present in the request but MUST NOT be included otherwise.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ODataCommandOptions">
            <summary>
            Represents the options used to configure an OData command
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataCommandOptions.Key">
            <summary>
            Gets the unique identifier of the single entry to query
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataCommandOptions.QueryOptions">
            <summary>
            Gets the options used to configure the OData query
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ODataQueryOptions">
            <summary>
            Represents the options used to configure an OData query
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Filter">
            <summary>
            Gets the $filter system query option, which allows clients to filter the set of resources that are addressed by a request URL. $filter specifies conditions that MUST be met by a resource for it to be returned in the set of matching resources
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Expand">
            <summary>
            Gets the $expand system query option, which allows clients to request related resources when a resource that satifies a particular request is retrieved
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Select">
            <summary>
            Gets the $select system query option, which allows clients to requests a limited set of information for each entity or complex type identified by the ResourcePath and other System Query Options like $filter, $top, $skip etc. The $select query option is often used in conjunction with the $expand query option, to first increase the scope of the resource graph returned ($expand) and then selectively prune that resource graph ($select)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.OrderBy">
            <summary>
            Gets the $orderby system query option, which allows clients to request resource in a particular order
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Top">
            <summary>
            Gets the $top system query option, which allows clients a required number of resources. Usually used in conjunction with the $skip query options
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Skip">
            <summary>
            Gets the $skip system query option, which allows clients to skip a given number of resources. Usually used in conjunction with the $top query options
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Count">
            <summary>
            Gets the $count system query option, which allows clients to request a count of the matching resources included with the resources in the response
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Search">
            <summary>
            Gets the $search system query option, which allows clients to request items within a collection matching a free-text search expression
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Format">
            <summary>
            Gets the $format system query option, if supported, which allows clients to request a response in a particular format
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Compute">
            <summary>
            Gets the $compute system query option, which allows clients to define computed properties that can be used in a $select or within a $filter or $orderby expression
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.Index">
            <summary>
            Gets the $index system query option, which allows clients to do a positional insert into a collection annotated with using the Core.PositionalInsert term (see http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#VocCore)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ODataQueryOptions.SchemaVersion">
            <summary>
            Gets the $schemaversion system query option, which allows clients to specify the version of the schema against which the request is made. The semantics of $schemaversion is covered in the OData-Protocol (http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#odata) document
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.OneOf`2">
            <summary>
            Gets an object that is one of the specified types
            </summary>
            <typeparam name="T1">A first type alternative</typeparam>
            <typeparam name="T2">A second type alternative</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OneOf`2.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OneOf`2.#ctor(`0)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/>
            </summary>
            <param name="value">The value of the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/></param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OneOf`2.#ctor(`1)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/>
            </summary>
            <param name="value">The value of the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OneOf`2.T1Value">
            <summary>
            Gets the first possible value
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OneOf`2.T2Value">
            <summary>
            Gets the second possible value
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OneOf`2.op_Implicit(`0)~ServerlessWorkflow.Sdk.Models.OneOf{`0,`1}">
            <summary>
            Implicitly convert the specified value into a new <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/>
            </summary>
            <param name="value">The value to convert</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OneOf`2.op_Implicit(`1)~ServerlessWorkflow.Sdk.Models.OneOf{`0,`1}">
            <summary>
            Implicitly convert the specified value into a new <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/>
            </summary>
            <param name="value">The value to convert</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OneOf`2.op_Implicit(ServerlessWorkflow.Sdk.Models.OneOf{`0,`1})~`0">
            <summary>
            Implicitly convert the specified <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> into a new value
            </summary>
            <param name="value">The <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> to convert</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OneOf`2.op_Implicit(ServerlessWorkflow.Sdk.Models.OneOf{`0,`1})~`1">
            <summary>
            Implicitly convert the specified <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> into a new value
            </summary>
            <param name="value">The <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> to convert</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition">
            <summary>
            Represents a workflow state that defines a set of actions to be performed in sequence or in parallel. Once all actions have been performed, a transition to another state can occur.
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.ActionMode">
            <summary>
            Gets/sets a value that specifies how actions are to be performed (in sequence of parallel). Defaults to sequential
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.Actions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> of actions to be performed if expression matches
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.GetAction(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.TryGetAction(System.String,ServerlessWorkflow.Sdk.Models.ActionDefinition@)">
            <summary>
            Attempts to get the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get</param>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.OperationStateDefinition.TryGetNextAction(System.String,ServerlessWorkflow.Sdk.Models.ActionDefinition@)">
            <summary>
            Attempts to get the next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> in the pipeline
            </summary>
            <param name="previousActionName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to get the next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> for</param>
            <param name="action">The next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>, if any</param>
            <returns>A boolean indicating whether or not there is a next <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> in the pipeline</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition">
            <summary>
            Represents a workflow state that executes <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>es in parallel
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.Branches">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>es executed by the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.CompletionType">
            <summary>
            Gets/sets a value that configures the way the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/> completes. Defaults to 'And'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.N">
            <summary>
            Gets/sets a value that represents the amount of <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>es to complete for completing the state, when <see cref="P:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.CompletionType"/> is set to <see cref="F:ServerlessWorkflow.Sdk.ParallelCompletionType.AtLeastN"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.GetBranch(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> with the specified name</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition.TryGetBranch(System.String,ServerlessWorkflow.Sdk.Models.BranchDefinition@)">
            <summary>
            Attempts to get the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> to get</param>
            <param name="branch">The <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> with the specified name</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ProduceEventDefinition">
            <summary>
            Represents the object used to configure an event o produce
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ProduceEventDefinition.EventReference">
            <summary>
            Gets/sets the name of a defined event to produce
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ProduceEventDefinition.Data">
            <summary>
            Gets/sets the data to pass to the cloud event to produce. If String, expression which selects parts of the states data output to become the data of the produced event. If object a custom object to become the data of produced event.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.RetryDefinition">
            <summary>
            Represents an object that defines workflow states retry policy strategy. This is an explicit definition and can be reused across multiple defined workflow state errors.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>'s name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.Delay">
            <summary>
            Gets/sets delay between retry attempts
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.MaxAttempts">
            <summary>
            Gets/sets the maximum amount of retries allowed
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.MaxDelay">
            <summary>
            Gets/sets the maximum delay between retries
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.Increment">
            <summary>
            Gets/sets the duration which will be added to the delay between successive retries
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.Multiplier">
            <summary>
            Gets/sets a value by which the delay is multiplied before each attempt. For example: "1.2" meaning that each successive delay is 20% longer than the previous delay. 
            For example, if delay is 'PT10S', then the delay between the first and second attempts will be 10 seconds, and the delay before the third attempt will be 12 seconds.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.JitterValue">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>'s jitter.<para></para>
            If float type, maximum amount of random time added or subtracted from the delay between each retry relative to total delay (between 0.0 and 1.0).<para></para>
            If string type, absolute maximum amount of random time added or subtracted from the delay between each retry (ISO 8601 duration format)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.JitterMultiplier">
            <summary>
            Gets/sets the maximum amount of random time added or subtracted from the delay between each retry relative to total delay (between 0.0 and 1.0)
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.RetryDefinition.JitterDuration">
            <summary>
            Gets/sets the absolute maximum amount of random time added or subtracted from the delay between each retry
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.RetryDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition">
            <summary>
            Represents an object used to define the time/repeating intervals at which workflow instances can/should be started 
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.Type">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.Interval">
            <summary>
            Gets/sets the time interval (ISO 8601 format) describing when workflow instances can be created.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.CronValue">
            <summary>
            Gets/sets a <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the CRON expression that defines when the workflow instance should be created
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.Cron">
            <summary>
            Gets/sets an object used to configure the schedule following which workflow instances should be created
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.CronExpression">
            <summary>
            Gets/sets a CRON expression that defines when the workflow instance should be created
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.ScheduleDefinition.Timezone">
            <summary>
            Gets/sets the timezone name used to evaluate the cron expression. Not used for interval as timezone can be specified there directly. If not specified, should default to local machine timezone.
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SecretBasedAuthenticationProperties">
            <summary>
            Represents <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationProperties"/> loaded from a specific secret
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SecretBasedAuthenticationProperties.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SecretBasedAuthenticationProperties"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SecretBasedAuthenticationProperties.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SecretBasedAuthenticationProperties"/>
            </summary>
            <param name="secret">The name of the secret to load the <see cref="T:ServerlessWorkflow.Sdk.Models.SecretBasedAuthenticationProperties"/> from</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SecretBasedAuthenticationProperties.Secret">
            <summary>
            Gets the name of the secret to load the <see cref="T:ServerlessWorkflow.Sdk.Models.SecretBasedAuthenticationProperties"/> from
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SleepStateDefinition">
            <summary>
            Represents a workflow state that waits for a certain amount of time before transitioning to a next state
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SleepStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SleepStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SleepStateDefinition.Duration">
            <summary>
            Gets/sets the amount of time to delay when in this state
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StartDefinition">
            <summary>
            Represents an object used to explicitly define how/when workflow instances should be created
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StartDefinition.StateName">
            <summary>
            Gets/sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>. If not defined, defaults to the first defined state
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StartDefinition.Schedule">
            <summary>
            Gets/sets the object used to define the time/repeating intervals at which workflow instances can/should be started
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StateDataFilterDefinition">
            <summary>
            Represents the object used to configure how to filter the states data input and output
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDataFilterDefinition.Input">
            <summary>
            Gets/sets an expression to filter the states data input
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDataFilterDefinition.Output">
            <summary>
            Gets/sets an expression that filters the states data output
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StateDefinition">
            <summary>
            Represents a <see href="https://github.com/serverlessworkflow/specification/blob/master/specification.md#State-Definition">serverless workflow state definition</see>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.StateDefinition.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="type">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s type</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Id">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s id
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s id
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Type">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.DataFilter">
            <summary>
            Gets/sets the filter to apply to the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s input and output data
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.DataInputSchemaValue">
            <summary>
            Gets/sets the <see cref="!:JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.DataInputSchema">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.DataInputSchemaUri">
            <summary>
            Gets/sets the <see cref="T:System.Uri"/> referencing the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Errors">
            <summary>
            Gets/sets the configuration of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s error handling
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.CompensatedBy">
            <summary>
            Gets/sets the id of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> used to compensate the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.UsedForCompensation">
            <summary>
            Gets/sets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> is used for compensating another <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Metadata">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s metadata
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.TransitionValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.Transition">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s transition to another <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.TransitionToStateName">
            <summary>
            Gets/sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.EndValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.End">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s transition to another <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.IsEnd">
            <summary>
            Gets/sets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> is the end of a logicial workflow path
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.StateDefinition.ExtensionProperties">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s extension properties
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.StateDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition">
            <summary>
            Represents the base class for all <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s outcomes
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SubflowReference">
            <summary>
            Represents a reference to a sub <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SubflowReference.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SubflowReference.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>
            </summary>
            <param name="workflowId">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run</param>
            <param name="version">The version of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run. Defaults to 'latest'</param>
            <param name="invocationMode">The subflow's <see cref="T:ServerlessWorkflow.Sdk.InvocationMode"/>. Defaults to <see cref="F:ServerlessWorkflow.Sdk.InvocationMode.Synchronous"/>.</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SubflowReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>
            </summary>
            <param name="workflowId">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run</param>
            <param name="invocationMode">The subflow's <see cref="T:ServerlessWorkflow.Sdk.InvocationMode"/>. Defaults to <see cref="F:ServerlessWorkflow.Sdk.InvocationMode.Synchronous"/>.</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubflowReference.WorkflowId">
            <summary>
            Gets/sets the id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubflowReference.Version">
            <summary>
            Gets/sets the version of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run. Defaults to 'latest'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubflowReference.InvocationMode">
            <summary>
            Gets/sets the subflow's <see cref="T:ServerlessWorkflow.Sdk.InvocationMode"/>. Defaults to <see cref="F:ServerlessWorkflow.Sdk.InvocationMode.Synchronous"/>.
            </summary>
            <remarks>
            Default value of this property is sync, meaning that workflow execution should wait until the subflow completes.<para></para>
            If set to async, workflow execution should just invoke the subflow and not wait for its results. Note that in this case the action does not produce any results, and the associated actions actionDataFilter as well as its retry definition, if defined, should be ignored.<para></para>
            Subflows that are invoked async do not propagate their errors to the associated action definition and the workflow state, meaning that any errors that happen during their execution cannot be handled in the workflow states onErrors definition.<para></para>
            Note that errors raised during subflows that are invoked async should not fail workflow execution.
            </remarks>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SubflowReference.ExtensionProperties">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>'s extension properties
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SubflowReference.Parse(System.String)">
            <summary>
            Parses the specified input into a new <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>
            </summary>
            <param name="input">The input to parse</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition">
            <summary>
            Represents the base class for all <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/> case implementations
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.OutcomeType">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.TransitionValue">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.Transition">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s transition to another <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.TransitionToStateName">
            <summary>
            Gets/sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.EndValue">
            <summary>
            Gets/sets the <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.End">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s transition to another <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> upon completion
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.IsEnd">
            <summary>
            Gets/sets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> is the end of a logicial workflow path
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition">
            <summary>
            Represents a workflow state that can be seen as a workflow gateway: they can direct transitions of a workflow based on certain conditions
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.SwitchType">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s type
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.DataConditions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/>s between which to switch. Assigning the property sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.SwitchType"/> to <see cref="F:ServerlessWorkflow.Sdk.SwitchStateType.Data"/>.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.EventConditions">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/>s between which to switch. Assigning the property sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.SwitchType"/> to <see cref="F:ServerlessWorkflow.Sdk.SwitchStateType.Event"/>.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.EventTimeout">
            <summary>
            Gets/sets the duration to wait for incoming events
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.DefaultCondition">
            <summary>
            Gets/sets an object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s default condition, in case none of the specified conditions were met
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.GetCase(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> with the specified name
            </summary>
            <param name="caseName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> with the specified name</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.TryGetCase(System.String,ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition@)">
            <summary>
            Attempts to get the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> with the specified name
            </summary>
            <param name="caseName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to get</param>
            <param name="case">The <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> with the specified name</param>
            <returns>A boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.GetEventCase(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> that applies to the specified event
            </summary>
            <param name="eventReference">The name of the event the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> to get applies to</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> that applies to the specified event</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition.TryGetEventCase(System.String,ServerlessWorkflow.Sdk.Models.EventCaseDefinition@)">
            <summary>
            Attempts to get the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> that applies to the specified event
            </summary>
            <param name="eventReference">The reference of the event the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> to get applies to</param>
            <param name="case">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> that applies to the specified event</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> with the specified id could be found</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition">
            <summary>
            Represents an object used to define a state transition
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.TransitionDefinition.NextState">
            <summary>
            Gets/sets the name of state to transition to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.TransitionDefinition.ProduceEvents">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the events to be produced before the transition happens
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.TransitionDefinition.Compensate">
            <summary>
            Gets/sets a boolean indicating whether or not to trigger workflow compensation before the transition is taken. Default is false
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition">
            <summary>
            Represents the definition of a Serverless Workflow
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Id">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s unique identifier
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Key">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s domain-specific workflow identifier
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Name">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s name
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Description">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s description
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Version">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s version
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.SpecVersion">
            <summary>
            Gets/sets the <see cref="T:System.Version"/> of the Serverless Workflow schema to use
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ExpressionLanguage">
            <summary>
            Gets/sets the language the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s expressions are expressed in
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Annotations">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s annotations
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Metadata">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s metadata
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.DataInputSchemaValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s data input <see cref="T:Newtonsoft.Json.Schema.JSchema"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.DataInputSchema">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s data input schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.DataInputSchemaUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s input data schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.SecretsValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s secrets
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Secrets">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s secrets
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.SecretsUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at a file containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s secrets
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.AuthValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Auth">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.AuthUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at a file containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ConstantsValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s constants
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Constants">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s constants
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ConstantsUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at a file containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s constants
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.EventsValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Events">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.EventsUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at a file containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.FunctionsValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Functions">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.FunctionsUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at a file containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TimeoutsValue">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution timeouts
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Timeouts">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution timeouts
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TimeoutsUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.RetriesValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Retries">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.RetriesUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at a file containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.StartValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that defines the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s start
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Start">
            <summary>
            Gets/sets the object used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StartDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.StartStateName">
            <summary>
            Gets/sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.States">
            <summary>
            Gets/sets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.AutoRetries">
            <summary>
            Gets/sets a boolean indicating whether or not actions should automatically be retried on unchecked errors. Defaults to false.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.KeepActive">
            <summary>
            Gets/sets a boolean indicating whether or not to keep instances of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> active even if there are no active execution paths. Instance can be terminated via 'terminate end definition' or reaching defined 'execTimeout'
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ExtensionsValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.ExtensionDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Extensions">
            <summary>
            Gets/sets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.ExtensionDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ExtensionsUri">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at a file containing the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.ExtensionDefinition"/> collection
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.GetStartState">
            <summary>
            Gets the start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> starts with</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TryGetStartState(ServerlessWorkflow.Sdk.Models.StateDefinition@)">
            <summary>
            Attempts to the start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="state">The start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <returns>A boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.GetStartState``1">
            <summary>
            Gets the start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <typeparam name="TState">The expected type of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></typeparam>
            <returns>The start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TryGetStartState``1(``0@)">
            <summary>
            Attempts to the start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="state">The start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <returns>A boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.GetState(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name, if any</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TryGetState(System.String,ServerlessWorkflow.Sdk.Models.StateDefinition@)">
            <summary>
            Attempts to retrieve the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to retrieve</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name, if any</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.GetState``1(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name
            </summary>
            <typeparam name="TState">The expected type of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name</typeparam>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name, if any</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TryGetState``1(System.String,``0@)">
            <summary>
            Attempts to retrieve the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name
            </summary>
            <typeparam name="TState">The expected type of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name</typeparam>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to retrieve</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name, if any</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.GetEvent(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> with the specified name, if any</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TryGetEvent(System.String,ServerlessWorkflow.Sdk.Models.EventDefinition@)">
            <summary>
            Attempts to retrieve the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to retrieve</param>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> with the specified name, if any</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.GetFunction(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> with the specified name, if any</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TryGetFunction(System.String,ServerlessWorkflow.Sdk.Models.FunctionDefinition@)">
            <summary>
            Attempts to retrieve the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to retrieve</param>
            <param name="function">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> with the specified name, if any</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.GetAuthentication(System.String)">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to get</param>
            <returns>The <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with the specified name, if any</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.TryGetAuthentication(System.String,ServerlessWorkflow.Sdk.Models.AuthenticationDefinition@)">
            <summary>
            Attempts to retrieve the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with the specified name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to retrieve</param>
            <param name="authentication">The <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with the specified name, if any</param>
            <returns>A boolean indicating whether or not a <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with the specified name could be found</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.ToString">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Models.WorkflowDefinition.Create(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/> used to build a new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="id">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <param name="version">The version of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition">
            <summary>
            Represents an object used to define the execution timeout for a workflow instance
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition.Duration">
            <summary>
            Gets/sets the duration after which the workflow's execution will time out
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition.Interrupt">
            <summary>
            Gets/sets a boolean indicating whether or not to terminate the workflow execution. Defaults to true.
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition.RunBefore">
            <summary>
            Gets/sets the name of a workflow state to be executed before workflow instance is terminated
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition">
            <summary>
            Represents the object used to configure a <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see href="https://github.com/serverlessworkflow/specification/blob/main/specification.md#Workflow-Timeouts">timeout</see>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition.WorkflowExecutionTimeoutValue">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution timeout
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition.WorkflowExecutionTimeout">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution timeout
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition.WorkflowExecutionTimeoutDuration">
            <summary>
            Gets/sets an <see cref="T:System.Uri"/> pointing at the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s input data schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition.StateExecutionTimeout">
            <summary>
            Gets/sets the duration after which to timeout states by default
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition.ActionExecutionTimeout">
            <summary>
            Gets/sets the duration after which to timeout actions by default
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition.BranchExecutionTimeout">
            <summary>
            Gets/sets the duration after which to timeout branches by default
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Models.WorkflowTimeoutDefinition.EventTimeout">
            <summary>
            Gets/sets the duration after which to timeout events by default
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.ActionType">
            <summary>
            Enumerates all types of actions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ActionType.Function">
            <summary>
            Indicates an action that invokes a function
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ActionType.Trigger">
            <summary>
            Indicates an action that executes a cloud event trigger
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ActionType.Subflow">
            <summary>
            Indicates an action that executes a subflow
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.AuthenticationScheme">
            <summary>
            Enumerates all supported authentication schemes
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.AuthenticationScheme.Basic">
            <summary>
            Indicates the basic (username/password) authentication scheme
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.AuthenticationScheme.Bearer">
            <summary>
            Indicates the bearer (JwT) authentication scheme
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.AuthenticationScheme.OAuth2">
            <summary>
            Indicates the OAuth 2 authentication scheme
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Cron">
            <summary>
            Defines helper methods to handle CRON expressions
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Cron.Parse(System.String)">
            <summary>
            Parses the specified input into a new <see cref="T:Cronos.CronExpression"/>
            </summary>
            <param name="input">The input to parse</param>
            <returns>A new <see cref="T:Cronos.CronExpression"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Cron.TryParse(System.String,Cronos.CronExpression@)">
            <summary>
            Parses the specified input into a new <see cref="T:Cronos.CronExpression"/>
            </summary>
            <param name="input">The input to parse</param>
            <param name="cron">The parsed <see cref="T:Cronos.CronExpression"/>, if any</param>
            <returns>A boolean indicating whether or not the specified input could be parsed</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.EventKind">
            <summary>
            Enumerates all kinds of workflow events
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.EventKind.Consumed">
            <summary>
            Indicates an event to consume
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.EventKind.Produced">
            <summary>
            Indicates an event to produce
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.DurationExtensions">
            <summary>
            Defines extensions for <see cref="T:Iso8601DurationHelper.Duration"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.DurationExtensions.ToTimeSpan(Iso8601DurationHelper.Duration)">
            <summary>
            Converts the <see cref="T:Iso8601DurationHelper.Duration"/> into a <see cref="T:System.TimeSpan"/>
            </summary>
            <param name="duration">The <see cref="T:Iso8601DurationHelper.Duration"/> to convert</param>
            <returns>The converted <see cref="T:System.TimeSpan"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.IServiceCollectionExtensions">
            <summary>
            Defines extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IServiceCollectionExtensions.AddServerlessWorkflow(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds and configures Serverless Workflow services (<see cref="T:Neuroglia.Serialization.ISerializer"/>s, <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/>, <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter"/>, ...)
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.IWorkflowReaderExtensions">
            <summary>
            Defines extensions for <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IWorkflowReaderExtensions.ReadAsync(ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Reads a <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> from the specified <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="reader">The extended <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/></param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> from</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IWorkflowReaderExtensions.ParseAsync(ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader,System.String,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions,System.Threading.CancellationToken)">
            <summary>
            Parses the specified input into a new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="reader">The extended <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/></param>
            <param name="input">The input to parse</param>
            <param name="options"><see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions"/> to use</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IWorkflowReaderExtensions.ParseAsync(ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader,System.String,System.Threading.CancellationToken)">
            <summary>
            Parses the specified input into a new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="reader">The extended <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/></param>
            <param name="input">The input to parse</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.WorkflowDefinitionExtensions">
            <summary>
            Defines extensions for <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.WorkflowDefinitionExtensions.GetActions(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.String)">
            <summary>
            Gets all the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s of the specified type declared in the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to query</param>
            <param name="type">The type of <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s to get. A null value gets all <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s</param>
            <returns>A new <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s of the specified type declared in the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.WorkflowDefinitionExtensions.GetFunctionReferences(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Gets all the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>s declared in the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to query</param>
            <returns>A new <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>s declared in the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.WorkflowDefinitionExtensions.GetEventReferences(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Gets all the <see cref="T:ServerlessWorkflow.Sdk.Models.EventReference"/>s declared in the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to query</param>
            <returns>A new <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.EventReference"/>s declared in the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.WorkflowDefinitionExtensions.GetSubflowReferences(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Gets all the <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>s declared in the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to query</param>
            <returns>A new <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>s declared in the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.FunctionType">
            <summary>
            Enumerates all types of functions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.FunctionType.Rest">
            <summary>
            Indicates a REST function
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.FunctionType.Rpc">
            <summary>
            Indicates an Remote Procedure Call (RPC)
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.FunctionType.GraphQL">
            <summary>
            Indicates a GraphQL function
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.FunctionType.OData">
            <summary>
            Indicates an OData function
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.FunctionType.Expression">
            <summary>
            Indicates an expression function
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.FunctionType.AsyncApi">
            <summary>
            Indicates an Async API function
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.InvocationMode">
            <summary>
            Enumerates all invocation modes
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.InvocationMode.Synchronous">
            <summary>
            Indicates a synchronous invocation mode
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.InvocationMode.Asynchronous">
            <summary>
            Indicates an asynchronous invocation mode
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.IOneOf">
            <summary>
            Defines the fundamentals of a service that wraps around multiple alternative value types
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.IOneOf.GetValue">
            <summary>
            Gets the object's current value
            </summary>
            <returns>The object's current value</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.OAuth2GrantType">
            <summary>
            Enumerates all <see href="https://datatracker.ietf.org/doc/html/rfc6749#section-4">OAuth 2 grant types</see> supported for workflow runtime token generation
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.OAuth2GrantType.Password">
            <summary>
            Indicates the <see href="https://datatracker.ietf.org/doc/html/rfc6749#section-4.3">resource-owner password credentials grant type</see>
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.OAuth2GrantType.ClientCredentials">
            <summary>
            Indicates the <see href="https://datatracker.ietf.org/doc/html/rfc6749#section-4.4">client credentials grant type</see>
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.OAuth2GrantType.TokenExchange">
            <summary>
            Indicates the <see href="https://datatracker.ietf.org/doc/html/rfc8693">token exchange grant type</see>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.OAuth2TokenType">
            <summary>
            Enumerates all supported token types
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.OAuth2TokenType.AccessToken">
            <summary>
            Indicates an access token
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.OAuth2TokenType.IdentityToken">
            <summary>
            Indicates an identity token
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.ParallelCompletionType">
            <summary>
            Enumerates all parallel completion types
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ParallelCompletionType.AllOf">
            <summary>
            Indicates that all branches should be completed before completing the parallel execution
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ParallelCompletionType.AtLeastN">
            <summary>
            Indicates that 'N' amount of branches should complete before completing the parallel execution, thus potentially cancelling running branches
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.RelativeUriReferenceResolutionMode">
            <summary>
            Enumerates all types of reference resolution modes for relative <see cref="T:System.Uri"/>s
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.RelativeUriReferenceResolutionMode.ConvertToAbsolute">
            <summary>
            Indicates that relative uris should be converted to an absolute one by combining them to a specified base uri
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.RelativeUriReferenceResolutionMode.ConvertToRelativeFilePath">
            <summary>
            Indicates that relative uris should be converted to a file path relative to a specified base directory
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.RelativeUriReferenceResolutionMode.None">
            <summary>
            Indicates that relative uris should not be resolved
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.ScheduleDefinitionType">
            <summary>
            Enumerates all types of schedule definitions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ScheduleDefinitionType.Cron">
            <summary>
            Indicates the definition of a CRON expression based schedule
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ScheduleDefinitionType.Interval">
            <summary>
            Indicates the definition of an interval based schedule
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.ServerlessWorkflowSpecVersion">
            <summary>
            Exposes all supported Serverless Workflow spec versions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ServerlessWorkflowSpecVersion.Latest">
            <summary>
            Gets the latest supported spec version
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ServerlessWorkflowSpecVersion.V0_6">
            <summary>
            Gets the v0.6.x version
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ServerlessWorkflowSpecVersion.V0_7">
            <summary>
            Gets the v0.7.x version
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.ServerlessWorkflowSpecVersion.V0_8">
            <summary>
            Gets the v0.8.x version
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Action">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.FromStateData(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.FilterResults(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.ToStateData(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Invoke(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Invoke(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Invoke(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithArgument(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithArguments(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithSelectionSet(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Consume(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Consume(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Consume(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.ThenProduce(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.ThenProduce(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithContextAttribute(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.WithContextAttributes(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Run(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Run(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Synchronously">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Asynchronously">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.LatestVersion">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Version(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ActionBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.AuthenticationDefinitionBuilder">
            <summary>
            Represents the base class for all <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IAuthenticationDefinitionBuilder"/> implementations
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.AuthenticationDefinitionBuilder.#ctor(ServerlessWorkflow.Sdk.Models.AuthenticationDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.AuthenticationDefinitionBuilder"/>
            </summary>
            <param name="authenticationDefinition">The <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to configure</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.AuthenticationDefinitionBuilder.AuthenticationDefinition">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.AuthenticationDefinitionBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.AuthenticationDefinitionBuilder.LoadFromSecret(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.AuthenticationDefinitionBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BasicAuthenticationBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BasicAuthenticationBuilder.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BasicAuthenticationBuilder"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.BasicAuthenticationBuilder.Properties">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.BasicAuthenticationProperties"/> of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to build
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BasicAuthenticationBuilder.WithUserName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BasicAuthenticationBuilder.WithPassword(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BearerAuthenticationBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBearerAuthenticationBuilder"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BearerAuthenticationBuilder.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BearerAuthenticationBuilder"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.BearerAuthenticationBuilder.Properties">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.BearerAuthenticationProperties"/> of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to build
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BearerAuthenticationBuilder.WithToken(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Branch">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Concurrently">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Sequentially">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.BranchBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.Action(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.Action(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.FilterPayload(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.ToStateData(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.On(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.CallbackStateBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder.WithExpression(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.DataSwitchCaseBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.ErrorHandler">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.Outcome">
            <summary>
            Gets the service used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>'s outcome
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.When(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.When(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.WhenAny">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.UseRetryStrategy(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ErrorHandlerBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/> interface
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.Event">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.WithSource(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.WithType(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.CorrelateUsing(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.CorrelateUsing(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.CorrelateUsing(System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.IsConsumed">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.IsProduced">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.Trigger(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.WaitForAll">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.WaitForAny">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.For(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateBuilder.Forever">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Trigger">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.On(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder}[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Sequentially">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Concurrently">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.FilterPayload(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.ToStateData(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventStateTriggerBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.On(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.EventSwitchCaseBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Concurrently">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.Sequentially">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.UseInputCollection(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.UseIterationParameter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.UseOutputCollection(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ForEachStateBuilder.WithBatchSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder"/>
            </summary>
            <param name="workflow">The service used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to build belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.Workflow">
            <summary>
            Gets the service used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to build belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.Function">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.OfType(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.ForOperation(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.ForOperation(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.UseAuthentication(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.UseAuthentication(ServerlessWorkflow.Sdk.Models.AuthenticationDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.UseBasicAuthentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.UseBearerAuthentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBearerAuthenticationBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.UseOAuth2Authentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.FunctionBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.InjectStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.InjectStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.InjectStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.InjectStateBuilder.Data(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.FromStateData(System.String)">
            <summary>
            Configures the workflow expression used to filter the state data passed to the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
            <param name="expression">The workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s input state data</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.FilterResults(System.String)">
            <summary>
            Configures the workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s results
            </summary>
            <param name="expression">The workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s results</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.ToStateData(System.String)">
            <summary>
            Configures the workflow expression used to merge the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s results into the state data
            </summary>
            <param name="expression">The workflow expression used to merge the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s results into the state data</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Invoke(System.String)">
            <summary>
            Invokes the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
            <param name="function">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to invoke. Requires the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to have been previously defined</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Invoke(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <summary>
            Invokes the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
            <param name="functionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to invoke</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Invoke(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <summary>
            Invokes the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
            <param name="function">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to invoke</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Consume(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build to consume the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="e">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to consume. Requires the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to have been previously defined</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Consume(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build to consume the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to create the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Consume(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build to consume the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Run(System.String,System.String,System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build to run the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflowId">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run</param>
            <param name="version">The version of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run</param>
            <param name="invocationMode">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.InvocationMode"/>. Defaults to <see cref="F:ServerlessWorkflow.Sdk.InvocationMode.Synchronous"/></param>
            <returns>The service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Run(System.String,System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to build to run the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflowId">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run</param>
            <param name="invocationMode">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.InvocationMode"/>. Defaults to <see cref="F:ServerlessWorkflow.Sdk.InvocationMode.Synchronous"/></param>
            <returns>The service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionCollectionBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build a collection of <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s
            </summary>
            <typeparam name="TContainer"></typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionCollectionBuilder`1.Sequentially">
            <summary>
            Configures the container to run defined actions sequentially
            </summary>
            <returns>The configured container</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionCollectionBuilder`1.Concurrently">
            <summary>
            Configures the container to run defined actions concurrently
            </summary>
            <returns>The configured container</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionContainerBuilder`1">
            <summary>
            Defines the fundamentals of a service that defines an <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
            <typeparam name="TContainer">The container's type</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionContainerBuilder`1.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to be executed by the container
            </summary>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured container</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionContainerBuilder`1.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to be executed by the container
            </summary>
            <param name="actionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured container</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionContainerBuilder`1.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to be executed by the container
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <param name="actionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured container</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IAuthenticationDefinitionBuilder">
            <summary>
            Defines the fundamentals of a service used to build an <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IAuthenticationDefinitionBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IAuthenticationDefinitionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IAuthenticationDefinitionBuilder.LoadFromSecret(System.String)">
            <summary>
            Loads the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> from a secret
            </summary>
            <param name="secret">The name of the secret to load the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> from</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IAuthenticationDefinitionBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder">
            <summary>
            Defines the fundamentals of a service used to build a <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.Basic"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder.WithUserName(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified username to authenticate
            </summary>
            <param name="username">The username to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder.WithPassword(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified password to authenticate
            </summary>
            <param name="password">The password to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBearerAuthenticationBuilder">
            <summary>
            Defines the fundamentals of a service used to build a <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.Bearer"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBearerAuthenticationBuilder.WithToken(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified token to authenticate
            </summary>
            <param name="token">The token to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder">
            <summary>
            Defines the fundamentals of a service used to configure <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder.WithName(System.String)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>'s name
            </summary>
            <param name="name">The <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>'s name</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder">
            <summary>
            Defines the fundamentals of the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.Action(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to execute the specified <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> upon consumption of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/>
            </summary>
            <param name="actionSetup">The <see cref="T:System.Action`1"/> used to create the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.Action(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to execute the specified <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> upon consumption of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/>
            </summary>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.On(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to wait for the consumption of a <see cref="T:CloudNative.CloudEvents.CloudEvent"/> defined by specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="e">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> that defines the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to wait for the consumption of a <see cref="T:CloudNative.CloudEvents.CloudEvent"/> defined by specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> that defines the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to wait for the consumption of a <see cref="T:CloudNative.CloudEvents.CloudEvent"/> defined by specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> that defines the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.FilterPayload(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to filter the payload of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/>
            </summary>
            <param name="expression">The workflow expression used to filter payload of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder.ToStateData(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/> to filter the payload of the callback <see cref="T:CloudNative.CloudEvents.CloudEvent"/>
            </summary>
            <param name="expression">The expression that selects a state data element to which the action results should be added/merged into</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder">
            <summary>
            Defines the fundamentals of a service used to build data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder.WithExpression(System.String)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s workflow expression used to evaluate the data
            </summary>
            <param name="expression">The workflow expression used to evaluate the data</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder.Case(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder})">
            <summary>
            Creates and configures a new data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
            <param name="caseBuilder">The <see cref="T:System.Action`1"/> used to build the data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SleepStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder.For(System.TimeSpan)">
            <summary>
            Configures the duration of the workflow execution's delay
            </summary>
            <param name="duration">The duration of the workflow execution's delay</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.UseRetryStrategy(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> used by 
            </summary>
            <param name="strategy">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to use</param>
            <returns></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.When(System.String,System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> to catch the specified errors
            </summary>
            <param name="error">The domain-specific errors to catch</param>
            <param name="errorCode">The code of the errors to catch</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.When(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> to catch the specified errors
            </summary>
            <param name="error">The domain-specific errors to catch</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.WhenAny">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/> to catch any error
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.IsConsumed">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Kind"/> to <see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/>
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.IsProduced">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.EventDefinition.Kind"/> to <see cref="F:ServerlessWorkflow.Sdk.EventKind.Produced"/>
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.WithSource(System.Uri)">
            <summary>
            Sets the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> source of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build
            </summary>
            <param name="source">The <see cref="T:CloudNative.CloudEvents.CloudEvent"/> source of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.WithType(System.String)">
            <summary>
            Sets the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> type of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build
            </summary>
            <param name="type">The <see cref="T:CloudNative.CloudEvents.CloudEvent"/> type of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.CorrelateUsing(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to use the specified <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute while performing correlation
            </summary>
            <param name="contextAttributeName">The name of the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.CorrelateUsing(System.String,System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to use the specified <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute while performing correlation
            </summary>
            <param name="contextAttributeName">The name of the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute to use</param>
            <param name="contextAttributeValue">The static value or workflow expression used during correlation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.CorrelateUsing(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to use the specified <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute while performing correlation
            </summary>
            <param name="correlations">A <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the context attribute key/value pairs to used when performing correlation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder">
            <summary>
            Defines the fundamentals of the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.Trigger(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder})">
            <summary>
            Builds, configures and adds a new <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>
            </summary>
            <param name="triggerSetup">The <see cref="T:System.Action`1"/> used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.WaitForAll">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> to wait for all triggers to complete before resuming the workflow's execution
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.WaitForAny">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> to wait for any trigger to complete before resuming the workflow's execution
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.For(System.TimeSpan)">
            <summary>
            Sets the duration after which the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> times out
            </summary>
            <param name="duration">The duration after which the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> times out</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder.Forever">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> to never time out
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder">
            <summary>
            Defines the fundamentals of the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.On(System.String[])">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to consume the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s defined by the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
            <param name="events">An array containing the reference names of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s that define the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder}[])">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to consume the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s defined by the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
            <param name="eventSetups">An array containing the <see cref="T:System.Action"/>s used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s that define the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition[])">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to consume the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s defined by the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s
            </summary>
            <param name="events">An array the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s that define the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s to consume</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.FilterPayload(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to filter the payload of consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s
            </summary>
            <param name="expression">The workflow expression used to filter payload of consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.ToStateData(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to select the state data element to which the action results should be added/merged into
            </summary>
            <param name="expression">The expression that selects a state data element to which the action results should be added/merged into</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateTriggerBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:CloudNative.CloudEvents.CloudEvent"/>-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder.On(System.String)">
            <summary>
            Creates and configures a new outcome when consuming any of the specified events
            </summary>
            <param name="e">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s to consume</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> used to build the outcome of the consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder.On(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Creates and configures a new outcome when consuming any of the specified events
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s to consume</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> used to build the outcome of the consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder.On(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Creates and configures a new outcome when consuming any of the specified events
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s to consume</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> used to build the outcome of the consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:CloudNative.CloudEvents.CloudEvent"/>-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder.Timeout(System.TimeSpan)">
            <summary>
            Sets the duration after which the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s execution times out
            </summary>
            <param name="duration">The duration after which the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s execution times out</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder.Case(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder})">
            <summary>
            Creates and configures a new data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>
            </summary>
            <param name="caseBuilder">The <see cref="T:System.Action`1"/> used to build the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s of type <see cref="F:ServerlessWorkflow.Sdk.ActionType.Trigger"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.ThenProduce(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to produce the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> when triggered
            </summary>
            <param name="e">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to produce. Requires the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to have been previously defined.</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.ThenProduce(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to produce the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> when triggered
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to create the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to produce</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.WithContextAttribute(System.String,System.String)">
            <summary>
            Adds the specified context attribute to the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> produced as a result of the trigger
            </summary>
            <param name="name">The name of the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute to add</param>
            <param name="value">The value of the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> context attribute to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.WithContextAttributes(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds the specified context attribute to the <see cref="T:CloudNative.CloudEvents.CloudEvent"/> produced as a result of the trigger
            </summary>
            <param name="contextAttributes">An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the context attributes to add to the <see cref="T:CloudNative.CloudEvents.CloudEvent"/>e produced as a result of the trigger</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventTriggerActionBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder.UseInputCollection(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/> to use the specified expression when resolving the input collection
            </summary>
            <param name="expression">The expression to use when resolving the input collection</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder.UseIterationParameter(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/> to use the specified expression when resolving the iteration parameter
            </summary>
            <param name="expression">The expression to use when resolving the iteration parameter</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder.UseOutputCollection(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/> to use the specified expression when resolving the output collection
            </summary>
            <param name="expression">The expression to use when resolving the output collection</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder.WithBatchSize(System.Nullable{System.Int32})">
            <summary>
            Configures how many iterations may run in parallel at the same time. Used if '<see cref="T:ServerlessWorkflow.Sdk.Models.ActionExecutionMode"/>' has been set to '<see cref="F:ServerlessWorkflow.Sdk.Models.ActionExecutionMode.Parallel"/>'
            </summary>
            <param name="batchSize">The maximum amount of iterations allowed</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder">
            <summary>
            Defines the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s of type <see cref="F:ServerlessWorkflow.Sdk.ActionType.Function"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder.WithSelectionSet(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to use the specified <see href="https://spec.graphql.org/June2018/#sec-Selection-Sets">GraphQL selection set</see>
            </summary>
            <param name="selectionSet">The <see href="https://spec.graphql.org/June2018/#sec-Selection-Sets">GraphQL selection set</see> to use</param>
            <remarks>Only supported for <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s of type <see cref="F:ServerlessWorkflow.Sdk.FunctionType.GraphQL"/></remarks>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder.WithArgument(System.String,System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to use the specified argument when performing the function call
            </summary>
            <param name="name">The name of the argument to add</param>
            <param name="value">The value or workflow expression of the argument to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder.WithArguments(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to use the specified argument when performing the function call
            </summary>
            <param name="args">An <see cref="T:System.Collections.Generic.IDictionary`2"/> containing the name/value pairs of the arguments to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionActionBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.OfType(System.String)">
            <summary>
            Sets the type of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to build
            </summary>
            <param name="type">The type of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.ForOperation(System.String)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s operation expression. Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Type"/> to <see cref="F:ServerlessWorkflow.Sdk.FunctionType.Expression"/>
            </summary>
            <param name="operation">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s operation expression</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.ForOperation(System.Uri)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s operation <see cref="T:System.Uri"/>. Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s <see cref="P:ServerlessWorkflow.Sdk.Models.FunctionDefinition.Type"/> to <see cref="F:ServerlessWorkflow.Sdk.FunctionType.Rest"/>
            </summary>
            <param name="operation">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>'s operation <see cref="T:System.Uri"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.UseAuthentication(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to use the specified <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>
            </summary>
            <param name="authentication">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.UseAuthentication(ServerlessWorkflow.Sdk.Models.AuthenticationDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to use the specified <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>
            </summary>
            <param name="authenticationDefinition">The <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.UseBasicAuthentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to use an <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.Basic"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.UseBearerAuthentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBearerAuthenticationBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to use an <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.Bearer"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.UseOAuth2Authentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to use an <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.OAuth2"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder.Data(System.Object)">
            <summary>
            Injects the specified data into the workflow
            </summary>
            <param name="data">The data to inject</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build metadata containers
            </summary>
            <typeparam name="TContainer">The type of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1"/></typeparam>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1.Metadata">
            <summary>
            Gets the container's metadata
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1.WithMetadata(System.String,System.Object)">
            <summary>
            Adds the specified metadata
            </summary>
            <param name="key">The metadata key</param>
            <param name="value">The metadata value</param>
            <returns>The configured container</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds the specified metadata
            </summary>
            <param name="metadata">An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the container's metadata</param>
            <returns>The configured container</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder">
            <summary>
            Defines the fundamentals of a service used to build a <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.OAuth2"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.UseGranType(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified <see cref="T:ServerlessWorkflow.Sdk.OAuth2GrantType"/> when requesting an access token
            </summary>
            <param name="grantType">The <see cref="T:ServerlessWorkflow.Sdk.OAuth2GrantType"/> to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.WithAuthority(System.Uri)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified authority to generate an access token
            </summary>
            <param name="authority">The uri of the OAuth2 authority to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.WithClientId(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified client ID when requesting an access token
            </summary>
            <param name="clientId">The client ID to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.WithClientSecret(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified client secret when requesting an access token
            </summary>
            <param name="clientSecret">The username to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.WithUserName(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified username to authenticate
            </summary>
            <param name="username">The username to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.WithPassword(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified password to authenticate
            </summary>
            <param name="password">The password to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.UseScopes(System.String[])">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified scopes when requesting an access token
            </summary>
            <param name="scopes">An array containing the scopes to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.UseAudiences(System.String[])">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to use the specified audiences when requesting an access token
            </summary>
            <param name="audiences">An array containing the audiences to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.WithSubjectToken(System.String,System.String)">
            <summary>
            Configures the token that represents the identity of the party on behalf of whom the request is being made.Typically, the subject of this token will be the subject of the security token issued in response to the request.
            </summary>
            <param name="tokenType">The type of the specified token</param>
            <param name="token">The subject token</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder.WithActorToken(System.String,System.String)">
            <summary>
            Configures the token that represents the identity of the acting party.Typically, this will be the party that is authorized to use the requested security token and act on behalf of the subject.
            </summary>
            <param name="tokenType">The type of the specified token</param>
            <param name="token">The actor token</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>s
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder.Branch(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/>
            </summary>
            <param name="branchSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.BranchDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder.WaitForAll">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/> to wait for all branches to complete before resuming the workflow's execution
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder.WaitFor(System.UInt32)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/> to wait for the specified amount of branches to complete before resuming the workflow's execution
            </summary>
            <param name="amount">The amount of branches to wait for the execution of</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> charts
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddEvent(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to the pipeline
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddEvent(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to the pipeline
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddFunction(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to the pipeline
            </summary>
            <param name="functionSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddFunction(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to the pipeline
            </summary>
            <param name="function">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddState(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to the pipeline
            </summary>
            <param name="stateSetup">The <see cref="T:System.Func`2"/> used to build and configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to add</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.AddState(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to the pipeline
            </summary>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to add</param>
            <returns>The newly added <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.Then(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Transitions to the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.Then(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Transitions to the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <param name="stateSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.EndsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow upon completion
            </summary>
            <param name="stateSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow with</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.EndsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow upon completion
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow execution with</param>
            <param name="stateSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow with</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.End">
            <summary>
            Configures the last <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow upon completion
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder.Build">
            <summary>
            Builds the pipeline
            </summary>
            <returns>A new <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s the pipeline is made out of</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithDelayOf(System.TimeSpan)">
            <summary>
            Sets the duration between successive retry attempts
            </summary>
            <param name="duration">The duration to wait between two retry attempts</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithNoDelay">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to not delay successive retry attempts
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithMaxDelay(System.TimeSpan)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>'s max delay between retry attempts
            </summary>
            <param name="duration">The maximum duration to wait between two retry attempt</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.MaxAttempts(System.UInt32)">
            <summary>
            Configures the maximum amount of retry attempts
            </summary>
            <param name="maxAttempts">The maximum amount of retry attempts</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithDelayIncrementation(System.TimeSpan)">
            <summary>
            Configures the duration which will be added to the delay between successive retries
            </summary>
            <param name="duration">The duration which will be added to the delay between successive retries</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithDelayMultiplier(System.Single)">
            <summary>
            Configures the value by which the delay is multiplied before each attempt.
            </summary>
            <param name="multiplier">The value by which the delay is multiplied before each attempt.</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithJitterMultiplier(System.Single)">
            <summary>
            Configures the maximum amount of random time added or subtracted from the delay between each retry relative to total delay
            </summary>
            <param name="multiplier">The maximum amount of random time added or subtracted from the delay between each retry relative to total delay</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.WithJitterDuration(System.TimeSpan)">
            <summary>
            Configures the absolute maximum amount of random time added or subtracted from the delay between each retry
            </summary>
            <param name="duration">The absolute maximum amount of random time added or subtracted from the delay between each retry</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder">
            <summary>
            Defines the fundamentals of a service used to build a <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder.AtInterval(System.TimeSpan)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/> to execute at the specified interval
            </summary>
            <param name="interval">The interval at which to execute the <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder.Every(System.String,System.Nullable{System.DateTime})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/> to execute at a frequency defined by the specified CRON expression
            </summary>
            <param name="cronExpression">A CRON expression that defines the frequency at which to execute the <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/></param>
            <param name="validUntil">The date and time when the cron expression invocation is no longer valid</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder.UseTimezone(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/> to use the specified timezone
            </summary>
            <param name="timezone">The timezone to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder.Build">
            <summary>
            Builds a new <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder">
            <summary>
            Defines the fundamentals of a service used to configure a <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1">
            <summary>
            Defines the fundamentals of a service used to configure a <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <typeparam name="TState">The type of <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.FilterInput(System.String)">
            <summary>
            Filters the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s input
            </summary>
            <param name="expression">The workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s input</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.FilterOutput(System.String)">
            <summary>
            Filters the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s output
            </summary>
            <param name="expression">The workflow expression used to filter the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>'s output</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.HandleError(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder})">
            <summary>
            Configures the handling for the specified error
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.CompensateWith(System.String)">
            <summary>
            Compensates the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to use for compensation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.CompensateWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Compensates the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">A <see cref="T:System.Func`2"/> used to create the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to use for compensation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1.CompensateWith(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <summary>
            Compensates the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> with the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="state">Tthe <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to use for compensation</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory">
            <summary>
            Defines the fundamentals of a service used to create <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> instances
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Callback">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ICallbackStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Delay(System.TimeSpan)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.SleepStateDefinition"/>
            </summary>
            <param name="duration">The delay's duration</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Delay">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.SleepStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Inject">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Inject(System.Object)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>
            </summary>
            <param name="data">The data to inject</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IInjectStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>
            </summary>
            <param name="action">The <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>
            </summary>
            <param name="actionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>
            </summary>
            <param name="name">the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <param name="actionSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/> to execute</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.ExecuteInParallel">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ParallelStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.ForEach(System.String,System.String,System.String)">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/>
            </summary>
            <param name="inputCollection">An expression that defines the input collection</param>
            <param name="iterationParameter">An expression that defines the iteration parameter</param>
            <param name="outputCollection">An expression that defines the output collection</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IForEachStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Switch">
            <summary>
            Creates and configures a new data-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.SwitchEvents">
            <summary>
            Creates and configures a new <see cref="T:CloudNative.CloudEvents.CloudEvent"/>-based <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory.Events">
            <summary>
            Creates and configures a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder.TransitionTo(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Transitions to the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">An <see cref="T:System.Func`2"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to transition to</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder.End">
            <summary>
            Configure the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to end the workflow
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s of type <see cref="F:ServerlessWorkflow.Sdk.ActionType.Subflow"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder.LatestVersion">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/> to run the latest version of the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder.Version(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/> to run the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> with the specified version
            </summary>
            <param name="version">The version of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder.Synchronously">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/> to run the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> synchronously, which is the default.
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder.Asynchronously">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/> to run the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> asynchronously
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowActionBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowRunnerBuilder">
            <summary>
            Defines the fundamentals of a service used to build workflow runners
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISubflowRunnerBuilder.RunSubflow(System.String)">
            <summary>
            Runs the specified workflow
            </summary>
            <param name="workflowId">The workflow to run</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchCaseBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchCaseBuilder`1.WithName(System.String)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>'s name
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder.Data">
            <summary>
            Switches on the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>'s data 
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchStateBuilder.Events">
            <summary>
            Switches on consumed <see cref="T:CloudNative.CloudEvents.CloudEvent"/>s
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchStateBuilder"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithId(System.String)">
            <summary>
            Sets the id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="key">The id of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithKey(System.String)">
            <summary>
            Sets the unique key of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="key">The unique key of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithName(System.String)">
            <summary>
            Sets the name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithDescription(System.String)">
            <summary>
            Sets the description of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="description">The description of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithVersion(System.String)">
            <summary>
            Sets the version of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="version">The description of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithSpecVersion(System.String)">
            <summary>
            Sets the Serverless Workflow specification version. Defaults to latest
            </summary>
            <param name="specVersion">The Serverless Workflow specification version</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithDataInputSchema(System.Uri)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s data input <see cref="T:Newtonsoft.Json.Schema.JSchema"/> <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to the data <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s data input <see cref="T:Newtonsoft.Json.Schema.JSchema"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithDataInputSchema(Newtonsoft.Json.Schema.JSchema)">
            <summary>
            Sets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> data input <see cref="T:Newtonsoft.Json.Schema.JSchema"/>
            </summary>
            <param name="schema">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:Newtonsoft.Json.Schema.JSchema"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithAnnotation(System.String)">
            <summary>
            Annotates the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to build
            </summary>
            <param name="annotation">The annotation to append to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to build</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.UseExpressionLanguage(System.String)">
            <summary>
            Configures the expression language used by the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to build
            </summary>
            <param name="language">The expression language to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.UseJq">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to use the 'jq' expression language
            </summary>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.ImportAuthenticationDefinitionsFrom(System.Uri)">
            <summary>
            Adds the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>s defined in the specified file
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the file that defines the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>s</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.UseAuthenticationDefinitions(ServerlessWorkflow.Sdk.Models.AuthenticationDefinition[])">
            <summary>
            Uses the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>s
            </summary>
            <param name="authenticationDefinitions">An array that contains the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>s</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddAuthentication(ServerlessWorkflow.Sdk.Models.AuthenticationDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="authenticationDefinition">The <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddBasicAuthentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder})">
            <summary>
            Adds a new <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.Basic"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to add</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> used to configure the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddBearerAuthentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBearerAuthenticationBuilder})">
            <summary>
            Adds a new <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.Bearer"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to add</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> used to configure the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddOAuth2Authentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder})">
            <summary>
            Adds a new <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> with scheme <see cref="F:ServerlessWorkflow.Sdk.AuthenticationScheme.OAuth2"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to add</param>
            <param name="configurationAction">An <see cref="T:System.Action`1"/> used to configure the service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.ImportConstantsFrom(System.Uri)">
            <summary>
            Adds the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> constants defined in the specified file
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the file that defines the constants</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.UseConstants(System.Object)">
            <summary>
            Uses the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s constants
            </summary>
            <param name="constants">An object that represents the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s constants</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddConstant(System.String,System.Object)">
            <summary>
            Adds the specified constants to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="name">The name of the constant to add</param>
            <param name="value">The value of the constant to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.UseSecrets(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Uses the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> secrets
            </summary>
            <param name="secrets">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the secrets to use</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddSecret(System.String)">
            <summary>
            Adds the specified secret to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="secret">The secret to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.WithExecutionTimeout(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition"/>
            </summary>
            <param name="timeoutSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition"/></param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.KeepActive(System.Boolean)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to not terminate its execution when there are no active execution paths
            </summary>
            <param name="keepActive">A boolean indicating whether or not to keep the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> active</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.StartsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Sets and configures the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">An <see cref="T:System.Func`2"/> used to setup the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.StartsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Sets and configures the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="name">The name of the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <param name="stateSetup">An <see cref="T:System.Func`2"/> used to setup the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.StartsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder},System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder})">
            <summary>
            Sets and configures the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="stateSetup">An <see cref="T:System.Func`2"/> used to setup the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <param name="scheduleSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s schedule</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.StartsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder},System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder})">
            <summary>
            Sets and configures the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="name">The name of the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <param name="stateSetup">An <see cref="T:System.Func`2"/> used to setup the startup <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <param name="scheduleSetup">An <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s schedule</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> used to configure the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.ImportEventsFrom(System.Uri)">
            <summary>
            Adds the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s defined in the specified file
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the file that defines the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/>s</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddEvent(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="e">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddEvent(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="eventSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.ImportFunctionsFrom(System.Uri)">
            <summary>
            Adds the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s defined in the specified file
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the file that defines the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddFunction(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="functionSetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddFunction(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="function">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.ImportRetryStrategiesFrom(System.Uri)">
            <summary>
            Adds the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>s defined in the specified file
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the file that defines the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>s</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddRetryStrategy(ServerlessWorkflow.Sdk.Models.RetryDefinition)">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="strategy">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.AddRetryStrategy(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder})">
            <summary>
            Adds the specified <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to create
            </summary>
            <param name="retryStrategySetup">The <see cref="T:System.Action`1"/> used to setup the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to add</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder.After(System.TimeSpan)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution to time out after the specified duration
            </summary>
            <param name="duration">The duration after which  to time out the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder.InterruptExecution(System.Boolean)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to interrupt its execution on timeout 
            </summary>
            <param name="interrupts">A boolean indicating whether or not interrupt the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s execution</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder.Run(System.String)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> before terminating its execution
            </summary>
            <param name="state">The reference name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to run before termination</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder.Run(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> before terminating its execution
            </summary>
            <param name="stateSetup">The <see cref="T:System.Func`2"/> used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to run before termination</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder.Run(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <summary>
            Configures the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to run the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> before terminating its execution
            </summary>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to run before termination</param>
            <returns>The configured <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder.Build">
            <summary>
            Builds the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition"/>
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.MetadataContainerBuilder`1">
            <summary>
            Represents the base class for all <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1"/>
            </summary>
            <typeparam name="TContainer">The type of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IMetadataContainerBuilder`1"/></typeparam>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.MetadataContainerBuilder`1.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.MetadataContainerBuilder`1.WithMetadata(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.MetadataContainerBuilder`1.WithMetadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.Properties">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties"/> of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to build
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.UseAudiences(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.UseGranType(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.UseScopes(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.WithAuthority(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.WithClientId(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.WithClientSecret(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.WithUserName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.WithPassword(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.WithSubjectToken(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OAuth2AuthenticationBuilder.WithActorToken(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IOperationStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Concurrently">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.OperationStateBuilder.Sequentially">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IParallelStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.Branch(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBranchBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.WaitFor(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ParallelStateBuilder.WaitForAll">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.States">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.List`1"/> containing the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s the pipeline is made out of
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.CurrentState">
            <summary>
            Gets the current <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> in the main pipeline of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddEvent(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddEvent(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddFunction(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddFunction(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddState(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.AddState(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.Then(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.Then(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.EndsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.EndsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.End">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.PipelineBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder"/> interface
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.Strategy">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithNoDelay">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithDelayOf(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithDelayIncrementation(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithDelayMultiplier(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithMaxDelay(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.MaxAttempts(System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithJitterDuration(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.WithJitterMultiplier(System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.RetryStrategyBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ScheduleBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder"/> interface
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.ScheduleBuilder.Schedule">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.ScheduleDefinition"/> to build
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ScheduleBuilder.AtInterval(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ScheduleBuilder.Every(System.String,System.Nullable{System.DateTime})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ScheduleBuilder.UseTimezone(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.ScheduleBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SleepStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDelayStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SleepStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SleepStateBuilder.For(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder`1"/> interface
            </summary>
            <typeparam name="TState">The type of <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to build</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.State">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.FilterInput(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.FilterOutput(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.CompensateWith(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.CompensateWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.CompensateWith(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.HandleError(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IErrorHandlerBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory"/> belongs to
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Callback">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Delay(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Delay">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Events">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Execute(ServerlessWorkflow.Sdk.Models.ActionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Execute(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Execute(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IActionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.ExecuteInParallel">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.ForEach(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Inject">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Inject(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.Switch">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilderFactory.SwitchEvents">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateOutcomeBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.Outcome">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateOutcomeDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.TransitionTo(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.End">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateOutcomeBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.ISwitchCaseBuilder`1"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2.Case">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchCaseBuilder`2.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchStateBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.StateBuilder`1"/> belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Data">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Events">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Timeout(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Case(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IDataSwitchCaseBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.SwitchStateBuilder.Case(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventSwitchCaseBuilder})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to configure
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Pipeline">
            <summary>
            Gets the service used to build the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s <see cref="T:ServerlessWorkflow.Sdk.Models.StartDefinition"/> chart
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithId(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithDescription(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithVersion(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithSpecVersion(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithDataInputSchema(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithDataInputSchema(Newtonsoft.Json.Schema.JSchema)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithAnnotation(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.UseExpressionLanguage(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.UseJq">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.WithExecutionTimeout(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IWorkflowExecutionTimeoutBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.KeepActive(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.ImportConstantsFrom(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.UseConstants(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddConstant(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.UseSecrets(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddSecret(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.ImportEventsFrom(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddEvent(ServerlessWorkflow.Sdk.Models.EventDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddEvent(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IEventBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.ImportFunctionsFrom(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddFunction(ServerlessWorkflow.Sdk.Models.FunctionDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddFunction(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IFunctionBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.ImportRetryStrategiesFrom(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddRetryStrategy(ServerlessWorkflow.Sdk.Models.RetryDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddRetryStrategy(System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IRetryStrategyBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.ImportAuthenticationDefinitionsFrom(System.Uri)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.UseAuthenticationDefinitions(ServerlessWorkflow.Sdk.Models.AuthenticationDefinition[])">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddAuthentication(ServerlessWorkflow.Sdk.Models.AuthenticationDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddBasicAuthentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBasicAuthenticationBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddBearerAuthentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IBearerAuthenticationBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.AddOAuth2Authentication(System.String,System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IOAuth2AuthenticationBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.StartsWith(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.StartsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.StartsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.StartsWith(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder},System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.StartsWith(System.String,System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder},System.Action{ServerlessWorkflow.Sdk.Services.FluentBuilders.IScheduleBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.#ctor(ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder"/>
            </summary>
            <param name="pipeline">The <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder"/> belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.Pipeline">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.IPipelineBuilder"/> the <see cref="T:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder"/> belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.Timeout">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowExecutionTimeoutDefinition"/> to configure
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.After(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.InterruptExecution(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.Run(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.Run(System.Func{ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilderFactory,ServerlessWorkflow.Sdk.Services.FluentBuilders.IStateBuilder})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.Run(ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.FluentBuilders.WorkflowExecutionTimeoutBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowExternalDefinitionResolver">
            <summary>
            Defines the fundamentals of a service used to resolve the external definitions referenced by a <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.IWorkflowExternalDefinitionResolver.LoadExternalDefinitionsAsync(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions,System.Threading.CancellationToken)">
            <summary>
            Loads the external definitions referenced by the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to load the external references of</param>
            <param name="options">The options used to configure how to read external definitions</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The loaded <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader">
            <summary>
            Defines the fundamentals of a service used to read <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader.ReadAsync(System.IO.Stream,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions,System.Threading.CancellationToken)">
            <summary>
            Reads a <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> from the specified <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> from</param>
            <param name="options">The <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions"/> to use</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter">
            <summary>
            Defines the fundamentals of a service used to write <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter.Write(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.IO.Stream,System.String)">
            <summary>
            Writes the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to a <see cref="T:System.IO.Stream"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to write</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to read the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> from</param>
            <param name="format">The format of the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to read. Defaults to '<see cref="F:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat.Yaml"/>'</param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowExternalDefinitionResolver"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.#ctor(Microsoft.Extensions.Logging.ILogger{ServerlessWorkflow.Sdk.Services.IO.WorkflowReader},Neuroglia.Serialization.IJsonSerializer,Neuroglia.Serialization.IYamlSerializer,System.Net.Http.IHttpClientFactory)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver"/>
            </summary>
            <param name="logger">The service used to perform logging</param>
            <param name="jsonSerializer">The service used to serialize and deserialize JSON</param>
            <param name="yamlSerializer">The service used to serialize and deserialize YAML</param>
            <param name="httpClientFactory">The service used to create <see cref="T:System.Net.Http.HttpClient"/>s</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.JsonSerializer">
            <summary>
            Gets the service used to serialize and deserialize JSON
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.YamlSerializer">
            <summary>
            Gets the service used to serialize and deserialize YAML
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.HttpClient">
            <summary>
            Gets the <see cref="T:System.Net.Http.HttpClient"/> used to retrieve external definitions
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.LoadExternalDefinitionsAsync(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.LoadDataInputSchemaAsync(System.Uri,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions,System.Threading.CancellationToken)">
            <summary>
            Loads the <see cref="T:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition"/> at the specified <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition"/> to load is located at</param>
            <param name="options">The <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions"/> to use</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The loaded <see cref="T:ServerlessWorkflow.Sdk.Models.DataInputSchemaDefinition"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.LoadExternalDefinitionAsync(System.Uri,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions,System.Threading.CancellationToken)">
            <summary>
            Loads an external definition
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> the external definition to load is located at</param>
            <param name="options">The <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions"/> to use</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:Newtonsoft.Json.Linq.JToken"/> that represents the object defined in the loaded external definition</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.LoadExternalDefinitionCollectionAsync``1(System.Uri,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions,System.Threading.CancellationToken)">
            <summary>
            Loads external definitions of the specified type
            </summary>
            <typeparam name="T">The type of external definition to load</typeparam>
            <param name="uri">The <see cref="T:System.Uri"/> the external definition to load is located at</param>
            <param name="options">The <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions"/> to use</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:System.Collections.Generic.List`1"/> containing the elements defined by the loaded external definition</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowExternalDefinitionResolver.ResolveRelativeUri(System.Uri,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions)">
            <summary>
            Resolves the specified relative <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The relative <see cref="T:System.Uri"/> to resolve</param>
            <param name="options">The <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions"/> to use</param>
            <returns>The resolved <see cref="T:System.Uri"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.#ctor(Microsoft.Extensions.Logging.ILogger{ServerlessWorkflow.Sdk.Services.IO.WorkflowReader},ServerlessWorkflow.Sdk.Services.IO.IWorkflowExternalDefinitionResolver,Neuroglia.Serialization.IJsonSerializer,Neuroglia.Serialization.IYamlSerializer)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader"/>
            </summary>
            <param name="logger">The service used to perform logging</param>
            <param name="externalDefinitionResolver">The service used to resolve external definitions referenced by <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s</param>
            <param name="jsonSerializer">The service used to serialize and deserialize JSON</param>
            <param name="yamlSerializer">The service used to serialize and deserialize YAML</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.JsonSerializer">
            <summary>
            Gets the service used to serialize and deserialize JSON
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.YamlSerializer">
            <summary>
            Gets the service used to serialize and deserialize YAML
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.ExternalDefinitionResolver">
            <summary>
            Gets the service used to resolve external definitions referenced by <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.ReadAsync(System.IO.Stream,ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowReader.Create">
            <summary>
            Creates a new default instance of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/> interface
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions">
            <summary>
            Represents the options used to configure an <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowReader"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions.BaseUri">
            <summary>
            Gets/sets the base <see cref="T:System.Uri"/> to use to combine to relative <see cref="T:System.Uri"/>s when the <see cref="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions.RelativeUriResolutionMode"/> property is set to <see cref="F:ServerlessWorkflow.Sdk.RelativeUriReferenceResolutionMode.ConvertToAbsolute"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions.BaseDirectory">
            <summary>
            Gets/sets the base directory to use when resolving relative <see cref="T:System.Uri"/> when the <see cref="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions.RelativeUriResolutionMode"/> property is set to <see cref="F:ServerlessWorkflow.Sdk.RelativeUriReferenceResolutionMode.ConvertToRelativeFilePath"/>. Defaults to <see cref="P:System.AppContext.BaseDirectory"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions.RelativeUriResolutionMode">
            <summary>
            Gets/sets the <see cref="T:ServerlessWorkflow.Sdk.RelativeUriReferenceResolutionMode"/> to use. Defaults to <see cref="F:ServerlessWorkflow.Sdk.RelativeUriReferenceResolutionMode.ConvertToRelativeFilePath"/>
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowReaderOptions.LoadExternalDefinitions">
            <summary>
            Gets/sets a boolean indicating whether or not to load external definitions
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.#ctor(Neuroglia.Serialization.IJsonSerializer,Neuroglia.Serialization.IYamlSerializer)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter"/>
            </summary>
            <param name="jsonSerializer">The service used to serialize and deserialize JSON</param>
            <param name="yamlSerializer">The service used to serialize and deserialize YAML</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.JsonSerializer">
            <summary>
            Gets the service used to serialize and deserialize JSON
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.YamlSerializer">
            <summary>
            Gets the service used to serialize and deserialize YAML
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.Write(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.IO.Stream,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.IO.WorkflowWriter.Create">
            <summary>
            Creates a new default instance of the <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter"/> interface
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.IO.IWorkflowWriter"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.ActionDefinitionValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.ActionDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.ActionDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s to validate belong to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.ActionDefinitionValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.ActionDefinition"/>s to validate belong to
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.AuthenticationDefinitionValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.AuthenticationDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.AuthenticationDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>s to validate belong to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.AuthenticationDefinitionValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/>s to validate belong to
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.AuthenticationDefinitionValidator.BeOfExpectedType(ServerlessWorkflow.Sdk.Models.AuthenticationDefinition,ServerlessWorkflow.Sdk.Models.AuthenticationProperties)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationProperties"/> match the defined <see cref="P:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition.Scheme"/> and are valid
            </summary>
            <param name="authentication">The <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to check</param>
            <param name="properties">The <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationProperties"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationProperties"/> match the defined <see cref="P:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition.Scheme"/> and are valid</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.BasicAuthenticationPropertiesValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.BasicAuthenticationProperties"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.BasicAuthenticationPropertiesValidator.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.BasicAuthenticationPropertiesValidator"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.BearerAuthenticationPropertiesValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.BearerAuthenticationProperties"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.BearerAuthenticationPropertiesValidator.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.BearerAuthenticationPropertiesValidator"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.CallbackStateValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.CallbackStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.CallbackStateValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.CallbackStateValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.CollectionPropertyValidator`1">
            <summary>
            Represents the service used to validate a workflow's <see cref="T:System.Collections.Generic.ICollection`1"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.CollectionPropertyValidator`1.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.CollectionPropertyValidator`1"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.CollectionPropertyValidator`1.Name">
            <inheritdoc/>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.CollectionPropertyValidator`1.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.CollectionPropertyValidator`1.IsValid(FluentValidation.ValidationContext{ServerlessWorkflow.Sdk.Models.WorkflowDefinition},System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.DataCaseDefinitionValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.DataCaseDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Models.SwitchStateDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.DataCaseDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/> to validate belongs to</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/> to validate belongs to</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.DefaultCaseDefinitionValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.DefaultCaseDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.DefaultCaseDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Models.SwitchStateDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.DefaultCaseDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/> to validate belongs to</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.DataCaseDefinition"/> to validate belongs to</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.ErrorHandlerDefinitionValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.ErrorHandlerDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Models.StateDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.ErrorHandlerDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s to validate belong to</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s to validate belong to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.ErrorHandlerDefinitionValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s to validate belong to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.ErrorHandlerDefinitionValidator.State">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.ErrorHandlerDefinition"/>s to validate belong to
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.EventCaseDefinitionValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventCaseDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Models.SwitchStateDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.EventCaseDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> to validate belongs to</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.EventCaseDefinition"/> to validate belongs to</param>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventCaseDefinitionValidator.ReferenceExistingEvent(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> exists
            </summary>
            <param name="eventName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> exists</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.EventReferenceValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.EventReference"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventReferenceValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.EventReferenceValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.EventReference"/>s to validate belong to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.EventReferenceValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>s to validate belong to
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventReferenceValidator.ReferenceExistingEvent(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> exists
            </summary>
            <param name="eventName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> exists</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventReferenceValidator.BeProduced(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> is of kind <see cref="F:ServerlessWorkflow.Sdk.EventKind.Produced"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> of kind <see cref="F:ServerlessWorkflow.Sdk.EventKind.Produced"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventReferenceValidator.BeConsumed(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> is of kind <see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> of kind <see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.EventStateTriggerDefinitionValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventStateTriggerDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Models.EventStateDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.EventStateTriggerDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to validate belongs to</param>
            <param name="eventState">The <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to validate belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.EventStateTriggerDefinitionValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to validate belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.EventStateTriggerDefinitionValidator.EventState">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateTriggerDefinition"/> to validate belongs to
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventStateTriggerDefinitionValidator.ReferenceExistingEvent(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> exists
            </summary>
            <param name="eventName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> exists</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventStateTriggerDefinitionValidator.BeConsumed(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> is of kind <see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/>
            </summary>
            <param name="name">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> of kind <see cref="F:ServerlessWorkflow.Sdk.EventKind.Consumed"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.EventStateValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.EventStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.EventStateValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.EventStateValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.ForEachStateValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.ForEachStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.ForEachStateValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.ForEachStateValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.FunctionDefinitionCollectionValidator">
            <summary>
            Represents the <see cref="!:PropertyValidator"/> used to validate a <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> collection
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.FunctionDefinitionCollectionValidator.Name">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.FunctionDefinitionCollectionValidator.IsValid(FluentValidation.ValidationContext{ServerlessWorkflow.Sdk.Models.WorkflowDefinition},System.Collections.Generic.IEnumerable{ServerlessWorkflow.Sdk.Models.FunctionDefinition})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.FunctionDefinitionValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.FunctionDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.FunctionDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s to validate belong to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.FunctionDefinitionValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/>s to validate belong to
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.FunctionDefinitionValidator.ReferenceExistingAuthentication(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> exists
            </summary>
            <param name="authenticationName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.AuthenticationDefinition"/> exists</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.FunctionReferenceValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.FunctionReferenceValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.FunctionReferenceValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>s to validate belong to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.FunctionReferenceValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>s to validate belong to
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.FunctionReferenceValidator.ReferenceExistingFunction(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> exists
            </summary>
            <param name="functionName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> exists</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.FunctionReferenceValidator.DoesNotReferenceGraphQLFunction(ServerlessWorkflow.Sdk.Models.FunctionReference)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/> references a <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> of type '<see cref="F:ServerlessWorkflow.Sdk.FunctionType.GraphQL"/>'
            </summary>
            <param name="functionReference">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/> to validate</param>
            <returns>A boolean indicating whether or not the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> is not of '<see cref="F:ServerlessWorkflow.Sdk.FunctionType.GraphQL"/>' type</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.FunctionReferenceValidator.ReferencesGraphQLFunction(ServerlessWorkflow.Sdk.Models.FunctionReference)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/> references a <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> of type '<see cref="F:ServerlessWorkflow.Sdk.FunctionType.GraphQL"/>'
            </summary>
            <param name="functionReference">The <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/> to validate</param>
            <returns>A boolean indicating whether or not the referenced <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionDefinition"/> is of '<see cref="F:ServerlessWorkflow.Sdk.FunctionType.GraphQL"/>' type</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.InjectStateValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.InjectStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.InjectStateValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.InjectStateValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowSchemaValidator">
            <summary>
            Defines the fundamentals of a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowSchemaValidator.ValidateAsync(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.Threading.CancellationToken)">
            <summary>
            Validates the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflow">The input to validate</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>An <see cref="T:System.Collections.Generic.IList`1"/> containing the <see cref="T:Newtonsoft.Json.Schema.ValidationError"/>s that have occured</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowSchemaValidator.ValidateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Validates the specified JSON input
            </summary>
            <param name="json">The input to validate</param>
            <param name="specVersion">The Serverless Workflow spec version to evaluate the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> against</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>An <see cref="T:System.Collections.Generic.IList`1"/> containing the <see cref="T:Newtonsoft.Json.Schema.ValidationError"/>s that have occured</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidationResult">
            <summary>
            Defines the fundamentals of an object used to describe a <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s validation results
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidationResult.SchemaValidationErrors">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the schema-related validation errors that have occured during the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s validation
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidationResult.DslValidationErrors">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the DSL-related validation errors that have occured during the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>'s validation
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidationResult.IsValid">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> is valid
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidator">
            <summary>
            Defines the fundamentals of a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidator.ValidateAsync(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Validates the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>
            </summary>
            <param name="workflowDefinition">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
            <param name="validateSchema">A boolean indicating whether or not to validate the schema of the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></param>
            <param name="validateDsl">A boolean indicating whether or not to validate the DSL of the specified <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidationResult"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.OAuth2AuthenticationPropertiesValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.OAuth2AuthenticationProperties"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.OAuth2AuthenticationPropertiesValidator.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.OAuth2AuthenticationPropertiesValidator"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.OperationStateValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.OperationStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.OperationStateValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.OperationStateValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.RetryStrategyDefinitionValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.RetryDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.RetryStrategyDefinitionValidator.#ctor">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.RetryStrategyDefinitionValidator"/>
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.SleepStateValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.SleepStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.SleepStateValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.SleepStateValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1">
            <summary>
            Represents the base class for all <see cref="T:FluentValidation.IValidator"/>s used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s
            </summary>
            <typeparam name="TState">The type of <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to validate</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1.ReferenceExistingState(ServerlessWorkflow.Sdk.Models.TransitionDefinition)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists
            </summary>
            <param name="transition">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1.ReferenceExistingState(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists
            </summary>
            <param name="stateName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1.ReferenceExistingEvent(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> exists
            </summary>
            <param name="eventName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.EventDefinition"/> exists</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1.DefineCompensationState(`0,ServerlessWorkflow.Sdk.Models.TransitionDefinition)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> defines a compensation state
            </summary>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <param name="oneOf">The <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/> that references the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> defines a compensation state</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1.DefineCompensationState(`0,ServerlessWorkflow.Sdk.Models.EndDefinition)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> defines a compensation state
            </summary>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <param name="oneOf">The <see cref="T:ServerlessWorkflow.Sdk.Models.EndDefinition"/> that references the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> defines a compensation state</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.StateDefinitionValidator`1.BeAvailableForCompensation(`0,System.Boolean)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> can be used for compensation
            </summary>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <param name="useForCompensation">A boolean indicating whether or not the states needs to be compensated. Always true.</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> defines a compensation state</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.SubflowReferenceValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.SubflowReferenceValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.SubflowReferenceValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.SubflowReference"/>s to validate belong to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.SubflowReferenceValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.FunctionReference"/>s to validate belong to
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.SwitchCaseDefinitionValidator`1">
            <summary>
            Represents the base class of all services used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/>s
            </summary>
            <typeparam name="TCondition">The type of <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to validate</typeparam>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.SwitchCaseDefinitionValidator`1.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Models.SwitchStateDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.SwitchCaseDefinitionValidator`1"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to validate belongs to</param>
            <param name="state">The <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to validate belongs to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.SwitchCaseDefinitionValidator`1.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to validate belongs to
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.SwitchCaseDefinitionValidator`1.State">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchCaseDefinition"/> to validate belongs to
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.SwitchCaseDefinitionValidator`1.ReferenceExistingState(ServerlessWorkflow.Sdk.Models.TransitionDefinition)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists
            </summary>
            <param name="transition">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.SwitchCaseDefinitionValidator`1.ReferenceExistingState(System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists
            </summary>
            <param name="stateName">The name of the <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.SwitchStateValidator">
            <summary>
            Represents a service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.SwitchStateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.SwitchStateValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.SwitchStateValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.TransitionDefinitionValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.TransitionDefinitionValidator.#ctor(ServerlessWorkflow.Sdk.Models.WorkflowDefinition)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.TransitionDefinitionValidator"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>s to validate belong to</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.TransitionDefinitionValidator.Workflow">
            <summary>
            Gets the <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> the <see cref="T:ServerlessWorkflow.Sdk.Models.TransitionDefinition"/>s to validate belong to
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowDefinitionValidator">
            <summary>
            Represents the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowDefinitionValidator.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowDefinitionValidator"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowDefinitionValidator.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowDefinitionValidator.Validate(FluentValidation.ValidationContext{ServerlessWorkflow.Sdk.Models.WorkflowDefinition})">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowDefinitionValidator.ReferenceExistingState(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,ServerlessWorkflow.Sdk.Models.StartDefinition)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StartDefinition"/> references an existing <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
            <param name="start">The <see cref="T:ServerlessWorkflow.Sdk.Models.StartDefinition"/> to check</param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowDefinitionValidator.ReferenceExistingState(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.String)">
            <summary>
            Determines whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StartDefinition"/> references an existing <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>
            </summary>
            <param name="workflow">The <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/> to validate</param>
            <param name="startStateName">The name of the start <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/></param>
            <returns>A boolean indicating whether or not the specified <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/> exists</returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowSchemaValidator"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.#ctor(Neuroglia.Serialization.IJsonSerializer,System.Net.Http.IHttpClientFactory)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator"/>
            </summary>
            <param name="serializer">The service used to serialize and deserialize JSON</param>
            <param name="httpClientFactory">The service used to create <see cref="T:System.Net.Http.HttpClient"/>s</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.Serializer">
            <summary>
            Gets the service used to serialize and deserialize JSON
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.HttpClient">
            <summary>
            Gets the <see cref="T:System.Net.Http.HttpClient"/> used to fetch the Serverless Workflow schema
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.Schemas">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the loaded Serverless Workflow spec <see cref="T:Newtonsoft.Json.Schema.JSchema"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.SchemaResolver">
            <summary>
            Gets the service used to resolve <see cref="T:Newtonsoft.Json.Schema.JSchema"/>s by <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.ValidateAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.ValidateAsync(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.LoadSpecificationSchemaAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Loads the Serverless Workflow <see cref="T:Newtonsoft.Json.Schema.JSchema"/>
            </summary>
            <returns>The Serverless Workflow <see cref="T:Newtonsoft.Json.Schema.JSchema"/></returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.GetSpecificationSchemaJsonAsync(System.Uri,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the JSON content of the specified schema
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the referenced JSON schema</param>
            <param name="specVersion">The Serverless Workflow specification version</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The JSON content of the specified schema</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.GetExtensionSchemaObjectAsync(ServerlessWorkflow.Sdk.Models.ExtensionDefinition,System.Threading.CancellationToken)">
            <summary>
            Retrieves the JSON content of the specified <see cref="T:ServerlessWorkflow.Sdk.Models.ExtensionDefinition"/>'s schema
            </summary>
            <param name="extension">The <see cref="T:ServerlessWorkflow.Sdk.Models.ExtensionDefinition"/> that defines the referenced JSON schema</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The JSON content of the specified schema</returns>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowSchemaValidator.ResolveRelativeUri(System.Uri)">
            <summary>
            Resolves the specified relative <see cref="T:System.Uri"/>
            </summary>
            <param name="uri">The relative <see cref="T:System.Uri"/> to resolve</param>
            <returns>The resolved <see cref="T:System.Uri"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowStatesPropertyValidator">
            <summary>
            Represents the service used to validate a workflow's <see cref="T:ServerlessWorkflow.Sdk.Models.StateDefinition"/>s
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowStatesPropertyValidator.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowStatesPropertyValidator"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowStatesPropertyValidator.Name">
            <inheritdoc/>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowStatesPropertyValidator.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowStatesPropertyValidator.IsValid(FluentValidation.ValidationContext{ServerlessWorkflow.Sdk.Models.WorkflowDefinition},System.Collections.Generic.List{ServerlessWorkflow.Sdk.Models.StateDefinition})">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidationResult">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidationResult"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidationResult.#ctor">
            <summary>
            Inherits a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidationResult"/>
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidationResult.#ctor(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Schema.ValidationError},System.Collections.Generic.IEnumerable{FluentValidation.Results.ValidationFailure})">
            <summary>
            Inherits a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidationResult"/>
            </summary>
            <param name="schemaValidationErrors">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the schema-related validation errors  that have occured while validating the read <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></param>
            <param name="dslValidationErrors">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the Serverless Workflow DSL-related validation errors that have occured while validating the read <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/></param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidationResult.SchemaValidationErrors">
            <inheritdoc/>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidationResult.DslValidationErrors">
            <inheritdoc/>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidationResult.IsValid">
            <inheritdoc/>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator">
            <summary>
            Represents the default implementation of the <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidator"/> interface
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator.#ctor(Microsoft.Extensions.Logging.ILogger{ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator},ServerlessWorkflow.Sdk.Services.IO.IWorkflowExternalDefinitionResolver,ServerlessWorkflow.Sdk.Services.Validation.IWorkflowSchemaValidator,System.Collections.Generic.IEnumerable{FluentValidation.IValidator{ServerlessWorkflow.Sdk.Models.WorkflowDefinition}})">
            <summary>
            Initializes a new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator"/>
            </summary>
            <param name="logger">The service used to perform logging</param>
            <param name="externalDefinitionResolver">The service used to resolve external definitions referenced by <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s</param>
            <param name="schemaValidator">The service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s</param>
            <param name="dslValidators">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the services used to validate Serverless Workflow DSL</param>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator.ExternalDefinitionResolver">
            <summary>
            Gets the service used to resolve external definitions referenced by <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator.SchemaValidator">
            <summary>
            Gets the service used to validate <see cref="T:ServerlessWorkflow.Sdk.Models.WorkflowDefinition"/>s
            </summary>
        </member>
        <member name="P:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator.DslValidators">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the services used to validate Serverless Workflow DSL
            </summary>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator.ValidateAsync(ServerlessWorkflow.Sdk.Models.WorkflowDefinition,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:ServerlessWorkflow.Sdk.Services.Validation.WorkflowValidator.Create">
            <summary>
            Creates a new default instance of the <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidator"/> interface
            </summary>
            <returns>A new <see cref="T:ServerlessWorkflow.Sdk.Services.Validation.IWorkflowValidator"/></returns>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.StateType">
            <summary>
            Enumerates all types of workflow states
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Operation">
            <summary>
            Indicates an operation state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Sleep">
            <summary>
            Indicates a sleep state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Event">
            <summary>
            Indicates an event state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Parallel">
            <summary>
            Indicates a parallel state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Switch">
            <summary>
            Indicates a switch state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Inject">
            <summary>
            Indicates an inject state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.ForEach">
            <summary>
            Indicates a foreach state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Callback">
            <summary>
            Indicates a callback state
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.StateType.Extension">
            <summary>
            Indicates an extension (custom) state
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.SwitchCaseOutcomeType">
            <summary>
            Enumerates all types of conditions
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.SwitchCaseOutcomeType.Transition">
            <summary>
            Indicates a transition condition
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.SwitchCaseOutcomeType.End">
            <summary>
            Indicates an end condition
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.SwitchStateType">
            <summary>
            Enumerates all types of switch states
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.SwitchStateType.Data">
            <summary>
            Indicates a data switch
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.SwitchStateType.Event">
            <summary>
            Indicates an event switch
            </summary>
        </member>
        <member name="T:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat">
            <summary>
            Enumerates all workflow definition formats
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat.Yaml">
            <summary>
            Indicates YAML
            </summary>
        </member>
        <member name="F:ServerlessWorkflow.Sdk.WorkflowDefinitionFormat.Json">
            <summary>
            Indicates JSON
            </summary>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.Iso8601TimeSpanConverter">
            <summary>
            Represents the <see cref="T:System.Text.Json.Serialization.JsonConverter`1"/> used to convert <see cref="T:System.TimeSpan"/>s from and to ISO 8601 durations
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.Iso8601TimeSpanConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.Iso8601TimeSpanConverter.Write(System.Text.Json.Utf8JsonWriter,System.TimeSpan,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.Iso8601NullableTimeSpanConverter">
            <summary>
            Represents the <see cref="T:System.Text.Json.Serialization.JsonConverter`1"/> used to convert <see cref="T:System.TimeSpan"/>s from and to ISO 8601 durations
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.Iso8601NullableTimeSpanConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.Iso8601NullableTimeSpanConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.TimeSpan},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:System.Text.Json.Serialization.Converters.OneOfConverter`2">
            <summary>
            Represents the service used to convert <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/>
            </summary>
            <typeparam name="T1">The first type alternative</typeparam>
            <typeparam name="T2">The second type alternative</typeparam>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.OneOfConverter`2.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:System.Text.Json.Serialization.Converters.OneOfConverter`2.Write(System.Text.Json.Utf8JsonWriter,ServerlessWorkflow.Sdk.Models.OneOf{`0,`1},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonElementExtensions">
            <summary>
            Defines extensions for <see cref="T:System.Text.Json.JsonElement"/>s
            </summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonElementExtensions.ToObject``1(System.Text.Json.JsonElement)">
            <summary>
            Converts the <see cref="T:System.Text.Json.JsonElement"/> into a new object of the specified type
            </summary>
            <typeparam name="T">The type of object to convert the <see cref="T:System.Text.Json.JsonElement"/> into</typeparam>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement"/> to convert</param>
            <returns>A new object of the specified type</returns>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonElementExtensions.ToObject``1(System.Text.Json.JsonDocument)">
            <summary>
            Converts the <see cref="T:System.Text.Json.JsonDocument"/> into a new object of the specified type
            </summary>
            <typeparam name="T">The type of object to convert the <see cref="T:System.Text.Json.JsonDocument"/> into</typeparam>
            <param name="document">The <see cref="T:System.Text.Json.JsonDocument"/> to convert</param>
            <returns>A new object of the specified type</returns>
        </member>
        <member name="T:Newtonsoft.Json.IgnoreEmptyEnumerableContractResolver">
            <summary>
            Represents a <see cref="T:Newtonsoft.Json.Serialization.DefaultContractResolver"/> used to ignore empty <see cref="T:System.Collections.IEnumerable"/>s when serializing
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.IgnoreEmptyEnumerableContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <inheritdoc/>
        </member>
        <member name="T:Newtonsoft.Json.Converters.Iso8601TimeSpanConverter">
            <summary>
            Represents the <see cref="T:Newtonsoft.Json.JsonConverter"/> used to convert from and to ISO 8601 timespan expressions
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Iso8601TimeSpanConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.TimeSpan,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.Converters.Iso8601TimeSpanConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.TimeSpan,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Newtonsoft.Json.Converters.OneOfConverter`2">
            <summary>
            Represents the service used to convert <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/>
            </summary>
            <typeparam name="T1">The first type alternative</typeparam>
            <typeparam name="T2">The second type alternative</typeparam>
        </member>
        <member name="M:Newtonsoft.Json.Converters.OneOfConverter`2.ReadJson(Newtonsoft.Json.JsonReader,System.Type,ServerlessWorkflow.Sdk.Models.OneOf{`0,`1},System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Newtonsoft.Json.Converters.OneOfConverter`2.WriteJson(Newtonsoft.Json.JsonWriter,ServerlessWorkflow.Sdk.Models.OneOf{`0,`1},Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:YamlDotNet.Serialization.OneOfConverter">
            <summary>
            Represents the <see cref="T:YamlDotNet.Serialization.IYamlTypeConverter"/> used to serialize and deserialize <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> instances
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.OneOfConverter.Accepts(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.OneOfConverter.ReadYaml(YamlDotNet.Core.IParser,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:YamlDotNet.Serialization.OneOfConverter.WriteYaml(YamlDotNet.Core.IEmitter,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:YamlDotNet.Serialization.OneOfDeserializer">
            <summary>
            Represents an <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/> used to deserialize <see cref="T:ServerlessWorkflow.Sdk.Models.OneOf`2"/> instances
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.OneOfDeserializer.#ctor(YamlDotNet.Serialization.INodeDeserializer)">
            <summary>
            Initializes a new <see cref="T:YamlDotNet.Serialization.OneOfDeserializer"/>
            </summary>
            <param name="inner">The inner <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/></param>
        </member>
        <member name="P:YamlDotNet.Serialization.OneOfDeserializer.Inner">
            <summary>
            Gets the inner <see cref="T:YamlDotNet.Serialization.INodeDeserializer"/>
            </summary>
        </member>
        <member name="M:YamlDotNet.Serialization.OneOfDeserializer.Deserialize(YamlDotNet.Core.IParser,System.Type,System.Func{YamlDotNet.Core.IParser,System.Type,System.Object},System.Object@)">
            <inheritdoc/>
        </member>
    </members>
</doc>
